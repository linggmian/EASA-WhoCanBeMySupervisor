Authors,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,Funding Text 1,Funding Text 2,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
"Mustafa Z., Husin M.H., Syed-Mohamad S.M., Abdullah N.A.","57219246437;55488475000;57189082262;56485269000;","Global research trends in Pro-Environmental Behaviour (PEB) studies in the field of computer science from 1976-2019: A bibliometric analysis",2020,"Journal of Scientometric Research","9","2",,"136","145",,,"10.5530/JSCIRES.9.2.17","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091844536&doi=10.5530%2fJSCIRES.9.2.17&partnerID=40&md5=f16737a447a6b9e7b43866310651cddb","School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia","Mustafa, Z., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia; Husin, M.H., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia; Abdullah, N.A., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia","This article aims to investigate from a bibliometric perspective, the pattern and trends of the pro-environmental behaviour (PEB) related studies in the field of Computer Science over the past 43 years extracted from the SCOPUS database. This is one of the early attempts to explicate and describe the patterns of published articles of PEB in the field of Computer Science. From the first article traced in 1976 until 2019, the total numbers of published documents related to pro-environmental behaviour across all disciplines are 2276. However, only 97 documents were found in the field of Computer Science. It is noted that the integration of PEB in Computer Science has indicated an exponential increase in annual publication rate and this trend appears to be evident in developed countries. Specifically, the analysis of productivity according to country/region, institution and funding sponsor suggested that the research landscapes in particularly in Malaysia are paying attention to the intersection of PEB and Computer Sciences. The exploration in the type of publication, source of publication, keyword and language analysis provided the orientation, status and trends of the topic and potential hints to future studies in this field. Overall, progressive trends in publications suggest that the integration of the topic would be continuously published and studied in Malaysia as well as among the international community. © 2020 Society for Industrial and Applied Mathematics.","Behavioural; Bibliometric; Scopus; Sustainability; Trends",,,,,,"National Science Foundation, NSF

Social Sciences and Humanities Research Council of Canada, SSHRC

Economic and Social Research Council, ESRC

European Commission, EC

Australian Research Council, ARC

Deutsche Forschungsgemeinschaft, DFG

Stichting voor Fundamenteel Onderzoek der Materie, FOM

National Natural Science Foundation of China, NSFC

Ministry of Higher Education, Malaysia, MOHE","Focusing on published document in PEB, the leading institutions are the University of Queensland, University of Groningen, Universidad de Sonora, University of Leeds and Sejong University. Meanwhile, the top 5 most depicted authors are Steg, L., Corral-Verdugo, V., Han, H., Milfont, T.L. and Fielding, K.S. From the extracted database, the most frequent sponsors for the fund are from the National Science Foundation, National Natural Science Foundation of China, Economic and Social Research Council, Social Sciences and Humanities Research Council of Canada and Australian Research Council.","University of Toronto and Aalborg Universitet. Alonso-Betanzos, A., Craig, T., Fontenla-Romero, O., Sánchez-Maroño, N. and Becerik-Gerber, B. actively published the document in the Computer Science field. Nonetheless, the National Science Foundation, Ministry of Higher Education of Malaysia, Deutsche Forschungsgemeinschaft, European Commission and Foundation for Fundamental Research on Matter are the top funding sponsors in studies of PEB in Computer Sciences.","(2019) Fiscal Monitor: How to Mitigate Climate Change, , International Monetary Fund (IMF). Washington, October; Kollmuss, A., Agyeman, J., Mind the Gap: Why do people act environmentally and what are the barriers to pro-environmental behavior? (2002) Environmental Education Research, 8 (3), pp. 239-260; Farisi, MI., Developing the 21st-Century Social Studies Skills through Technology Integration (2016) Turkish Online Journal of Distance Education, 17 (1), pp. 16-30. , Jan; Si, H., Shi, J. G., Tang, D., Wen, S., Miao, W., Duan, K., Application of the theory of planned behavior in environmental science: A comprehensive bibliometric analysis (2019) International Journal of Environmental Research and Public Health, 16 (15); Ruhanen, L., Weiler, B., Moyle, B. D., McLennan, C. L. J., Trends and patterns in sustainable tourism research: A 25-year bibliometric analysis (2015) Journal of Sustainable Tourism, 23 (4), pp. 517-535; Silva, M. C., Teixeira, A. A., A bibliometric account of the evolution of EE in the last two decades: Is ecological economics (becoming) a post-normal science? (2011) Ecological Economics, 70 (5), pp. 849-862; Bakri, A., Willett, P., Computer science research in Malaysia: A bibliometric analysis (2011) Aslib Proceedings: new information perspectives, 63 (2-3), pp. 321-335. , (March) Emerald Group Publishing Limited; Raban, D.R., Gordon, A., The evolution of data science and big data research: A bibliometric analysis (2020) Scientometrics, 122, pp. 1563-1581. , https://doi.org/10.1007/s11192-020-03371-2; Yu, D., Xu, Z., Pedrycz, W., Wang, W., Information Sciences 1968-2016: A retrospective analysis with text mining and bibliometric (2017) Information Sciences, 418, pp. 619-634; Radev, D. R., Joseph, M. T., Gibson, B., Muthukrishnan, P., A bibliometric and network analysis of the field of computational linguistics (2016) Journal of the Association for Information Science and Technology, 67 (3), pp. 683-706; Zimmerman, C., Cuddington, K., Ambiguous, circular and polysemous: Students' definitions of the ""balance of nature"" metaphor (2007) Public Understanding of Science, 16 (4), pp. 393-406; Grace, J., Has ecology grown up? (2019) Plant Ecology & Diversity, 12 (5), pp. 387-405; Corman, J. R., Collins, S. L., Cook, E. M., Dong, X., Gherardi, L. A., Grimm, N. B., Sala, O. E., Foundations and Frontiers of Ecosystem Science: Legacy of a Classic Paper (Odum 1969) (2019) Ecosystems, 22 (5), pp. 1160-1172; El-Shaarawi, A. H., Piegorsch, W. W., (2001) Encyclopedia of environmetrics, 1. , John Wiley & Sons; Mitcham, C., The concept of sustainable development: Its origins and ambivalence (1995) Technology in Society, 17 (3), pp. 311-326. , https://doi.org/10.1016/0160-791X(95)00008-F; Jelinski, D. E., There is No Mother Nature-There is No Balance of Nature: Culture, Ecology and Conservation (2005) Human Ecology, 33 (2); Taylor, M. W., Herbert Spencer and the metaphysical roots of evolutionary naturalism (2015) The Age of Scientific Naturalism, pp. 87-104. , Routledge; Kirchner, J. W., The Gaia Hypothesis: Fact, Theory, and Wishful Thinking (2002) Climatic Change, 52 (4), pp. 391-408; Pasternack, G. B., Does the river run wild? Assessing chaos in hydrological systems (1999) Advances in Water Resources, 23 (3), pp. 253-260. , https://doi.org/10.1016/S0309-1708(99)00008-1; Suárez-Vergne, Á., Environmental behavior in Europe. An analysis of collaborative consumption (2018) Revista Espanola de Sociologia, 27 (3), pp. 491-510; Cushing, J. M., Costantino, R. F., Dennis, B., Desharnais, R., Henson, S. M., (2002) Chaos in ecology: Experimental nonlinear dynamics, , Elsevier; Rosa, C. D., Collado, S., Profice, C. C., Measuring Brazilians' environmental attitudes: A systematic review and empirical analysis of the NEP scale (2018) Current Psychology; Palupi, T., Sawitri, D. R., The Importance of Pro-Environmental Behavior in Adolescent (2018) the 2nd International Conference on Energy, Environmental and Information System, ICENIS 2017, , Paper presented at; Steg, L., Vlek, C., Encouraging pro-environmental behaviour: An integrative review and research agenda (2009) Journal of Environmental Psychology, 29 (3), pp. 309-317; Hovardas, T., Korfiatis, K., Towards a Critical Re-Appraisal of Ecology Education: Scheduling an Educational Intervention to Revisit the 'Balance of Nature' Metaphor (2011) Science & Education, 20 (10), pp. 1039-1053; Jelinski, D. E., There is No Mother Nature-There is No Balance of Nature: Culture, Ecology and Conservation (2005) Human Ecology, 33 (2); Dunlap, R. E., Van Liere, K. D., Mertig, A. G., Jones, R. E., New trends in measuring environmental attitudes: Measuring endorsement of the new ecological paradigm: A revised NEP scale (2000) Journal of social issues, 56 (3), pp. 425-442; Bernstein, J., Szuster, B. W., The new environmental paradigm scale: Reassessing the operationalization of contemporary environmentalism (2019) Journal of Environmental Education, 50 (2), pp. 73-83; Lau, J. L., Hashim, A. H., Samah, A. A., Salim, A. S. S., Understanding the environmental worldviews of Malaysian project managers (2016) Smart and Sustainable Built Environment, 5 (4), pp. 307-324; Lytle, M. H., (2007) The gentle subversive: Rachel Carson, Silent Spring, and the rise of the environmental movement, , Oxford University Press; Sollberger, S., (2015) Pro-environmental Behavior: A Psychobiological Perspective, , Cuvillier Verlag; Kim, M. R., Han, S. J., Factors influencing the pro-environmental behavior of women's college students in Korea (2017) Information (Japan), 20 (3), pp. 1545-1552; Liu, Z., Feng, S., (2019) Linking political attitude and pro-environmental behaviors in China, , Applied Economics; Ghazali, E. M., Nguyen, B., Mutum, D. S., Yap, S. F., Pro-environmental behaviours and Value-Belief-Norm theory: Assessing unobserved heterogeneity of two ethnic groups (2019) Sustainability (Switzerland), 11 (12); Dietz, T., Kalof, L., Stern, P. C., Gender, values, and environmentalism (2002) Social Science Quarterly, 83 (1), pp. 353-364; Boeve-de Pauw, J., Van Petegem, P., Because my friends insist or because it makes sense? Adolescents' motivation towards the environment (2017) Sustainability (Switzerland), 9 (5); Subiza-Pérez, M., Santa Marina, L., Irizar, A., Gallastegi, M., Anabitarte, A., Urbieta, N., Ibarluzea, J., Who feels a greater environmental risk? Women, younger adults and pro-environmentally friendly people express higher concerns about a set of environmental exposures (2020) Environmental Research, 181; Çoker, E. N., van der Linden, S., Fleshing out the theory of planned of behavior: Meat consumption as an environmentally significant behavior (2020) Current Psychology; Burke, J., Running, K., Role identities and pro-environmental behavior among farmers (2019) Human Ecology Review, 25 (1), pp. 3-22; Chua, K. B., Quoquab, F., Mohammad, J., Factors affecting environmental citizenship behaviour: An empirical investigation in Malaysian paddy industry (2019) Asia Pacific Journal of Marketing and Logistics, 32 (1), pp. 86-104; Ramkissoon, H., Graham Smith, L. D., Weiler, B., Testing the dimensionality of place attachment and its relationships with place satisfaction and pro-environmental behaviours: A structural equation modelling approach (2013) Tourism Management, 36, pp. 552-566; Smith, A. M., O'Sullivan, T., Environmentally responsible behaviour in the workplace: An internal social marketing approach (2012) Journal of Marketing Management, 28 (3-4), pp. 469-493; Langenbach, B. P., Berger, S., Baumgartner, T., Knoch, D., Cognitive Resources Moderate the Relationship Between Pro-Environmental Attitudes and Green Behavior (2019) Environment and Behavior; Panno, A., Carrus, G., Brizi, A., Maricchiolo, F., Giacomantonio, M., Mannetti, L., Need for cognitive closure and political ideology predicting proenvironmental preferences and behavior (2018) Social Psychology, 49 (2), pp. 103-112; Song, Z., Soopramanien, D., Types of place attachment and proenvironmental behaviors of urban residents in Beijing (2019) Cities, 84, pp. 112-120; Elgaaied, L., Exploring the role of anticipated guilt on proenvironmental behavior - a suggested typology of residents in France based on their recycling patterns (2012) Journal of Consumer Marketing, 29 (5), pp. 369-377; Bonnes, M., Carrus, G., Corral-Verdugo, V., Passafaro, P., The sociopsychological affinity towards diversity: From biodiversity to socia-ecological sustainability (2013) Psychological Approaches to Sustainability: Current Trends in Theory, Research and Applications, pp. 125-140. , Nova Science Publishers, Inc; Corral-Verdugo, V., Martha Montiel-Carbajal, M., Sotomayor-Petterson, M., Frías-Armenta, M., Tapia-Fonllem, C., Fraijo-Sing, B., Psychological wellbeing as correlate of sustainable behaviors (2013) Recent Hispanic Research on Sustainable Behavior and Interbehavioral Psychology, pp. 27-40. , Nova Science Publishers, Inc; Wittek, R., Bekkers, R., Altruism and Prosocial Behavior, Sociology of (2015) International Encyclopedia of the Social & Behavioral Sciences, pp. 579-583. , J. D. Wright (Ed), (Second Edition) Oxford: Elsevier; Lange, F., Dewitte, S., Cognitive Flexibility and Pro-environmental Behaviour: A Multimethod Approach (2019) European Journal of Personality, 33 (4), pp. 488-505; Langenbach, B. P., Berger, S., Baumgartner, T., Knoch, D., Cognitive Resources Moderate the Relationship Between Pro-Environmental Attitudes and Green Behavior (2019) Environment and Behavior; Sörqvist, P., Langeborg, L., Why people harm the environment although they try to treat it well: An evolutionary-cognitive perspective on climate compensation (2019) Frontiers in Psychology, 10 (MAR); Nyberg, E., Castéra, J., Mc Ewen, B., Gericke, N., Clément, P., Teachers' and Student Teachers' Attitudes Towards Nature and the Environment-A Comparative Study Between Sweden and France (2019) Scandinavian Journal of Educational Research; Przydatek, G., Waste management in selected national parks - A review (2019) Journal of Ecological Engineering, 20 (4), pp. 14-22; Baumgartner, T., Langenbach, B. P., Gianotti, L. R. R., Müri, R. M., Knoch, D., Frequency of everyday pro-environmental behaviour is explained by baseline activation in lateral prefrontal cortex (2019) Scientific Reports, 9 (1); Balador, Z., Gjerde, M., Isaacs, N., Influential factors on using reclaimed and recycled building materials (2020) 11th International Conference on Sustainability and Energy in Buildings, SEB 2019, 163, pp. 37-47. , J. Littlewood, R. J. Howlett, R. J. Howlett, L. C. Jain, A. Capozzoli, L. C. Jain, L. C. Jain, & L. C. Jain (Eds), Springer; von Grabe, J., Using the Instance-Based Learning Paradigm to Model Energy-Relevant Occupant Behaviors in Buildings (2020) Cognitive Computation, 12 (1), pp. 71-99; Mokrzecka, M., Nowak, K., Green design, identity or both? Factors affecting environmentally responsible behaviors in student residences (2019) World Sustainability Series, pp. 559-575. , Springer; Kim, J., Kim, S., Lee, J. S., Kim, P. B., Cui, Y., Influence of Choice Architecture on the Preference for a Pro-Environmental Hotel (2019) Journal of Travel Research; Cole, L. B., Hamilton, E. M., Can a Green School Building Teach? A Pre- and Post-Occupancy Evaluation of a Teaching Green School Building (2019) Environment and Behavior; Arbuthnot, J., Tedeschi, R., Wayner, M., Turner, J., Kressel, S., Rush, R., Induction of sustained recycling behavior through the foot-in-the-door technique (1976) Journal of Environmental Systems, 6 (4), pp. 355-368; Stern, P. C., Effect of incentives and education on resource conservation decisions in a simulated common dilemma (1976) Journal of Personality and Social Psychology, 34 (6), pp. 1285-1292; Stern, P. C., Kirkpatrick, E. M., Energy behavior (1977) Environment, 19 (9), pp. 10-15; Papaoikonomou, K., Latinopoulos, D., Emmanouil, C., Kungolos, A., A Survey on Factors Influencing Recycling Behavior for Waste of Electrical and Electronic Equipment in the Municipality of Volos, Greece (2020) Environmental Processes; Milovantseva, N., Saphores, J. D., E-waste bans and U.S. households' preferences for disposing of their e-waste (2013) Journal of Environmental Management, 124, pp. 8-16; Milovantseva, N., Saphores, J. D., Time bomb or hidden treasure? Characteristics of junk TVs and of the US households who store them (2013) Waste Management, 33 (3), pp. 519-529; Milovantseva, N., Are American households willing to pay a premium for greening consumption of Information and Communication Technologies? (2016) Journal of Cleaner Production, 127, pp. 282-288; Lizin, S., Van Dael, M., Van Passel, S., Battery pack recycling: Behaviour change interventions derived from an integrative theory of planned behaviour study (2017) Resources, Conservation and Recycling, 122, pp. 66-82; Dhumne, K. M., Paperless Society in Digital Era (2017) International Journal of Library and Information Studies, 7 (4), pp. 317-319; Alrowaily, M. A., Kavakli, M., The use of augmented reality for encouraging pro-environmental behaviors: The case of Australia (2017) the 9th International Conference on Computer and Automation Engineering, ICCAE 2017, , Paper presented at; Suleri, J., Cavagnaro, E., Promoting pro-environmental printing behavior: The role of ICT barriers and sustainable values (2016) International Journal of Education and Development using ICT, 12 (2); Ro, M., Brauer, M., Kuntz, K., Shukla, R., Bensch, I., Making Cool Choices for sustainability: Testing the effectiveness of a game-based approach to promoting pro-environmental behaviors (2017) Journal of Environmental Psychology, 53, pp. 20-30; Ahmed, S., Adnan, M., Janssens, D., Brattich, E., Yasar, A. U. H., Kumar, P., Shakshuki, E. M., Estimating pro-environmental potential for the development of mobility-based informational intervention: A data-driven algorithm (2019) Personal and Ubiquitous Computing, 23 (5-6), pp. 653-668; Altiok, S., Baser, Z., Yükseltürk, E., Enhancing metacognitive awareness of undergraduates through using an e-educational video environment (2019) Computers & Education, 139, pp. 129-145. , https://doi.org/10.1016/j.compedu.2019.05.010; Dubey, R., Gunasekaran, A., Childe, S. J., Papadopoulos, T., Luo, Z., Wamba, S. F., Roubaud, D., Can big data and predictive analytics improve social and environmental sustainability? (2019) Technological Forecasting and Social Change, 144, pp. 534-545; Lee, D., Kang, S., Shin, J., Using deep learning techniques to forecast environmental consumption level (2017) Sustainability (Switzerland), 9 (10), p. 1894; Altemose, A., Sen, A., Collective Behaviour of Artificial Microswimmers in Response to Environmental Conditions (2018) Self-organized Motion: Physicochemical Design based on Nonlinear Dynamics, 14, p. 250; Taha, A., Wu, R., Emeakaroha, A., Krabicka, J., Lee, A., Inducing proenvironmental behaviour in National Health Service (NHS) to reduce energy costs using persuasive technology techniques (2017) the 16th International Conference on Sustainable Energy Technologies, , Paper presented at; Khajuria, S., Sørensen, L., Skouby, K. E., (2017) Cybersecurity and Privacy-Bridging the Gap, , River Publishers; Tzafestas, SG, Roboethics: A Navigating Overview (2016) Intelligent systems, control and automation: Science and engineering, 79. , https://doi.org/10.1007/978-3-319-21714-7, Springer, Berlin; Pedersen, T., Johansen, C., Jøsang, A., Behavioural Computer Science: An agenda for combining modelling of human and system behaviours (2018) Humancentric Computing and Information Sciences, 8 (1), pp. 1-20; Kahneman, D., (2011) Thinking, fast and slow, , Macmillan; Simon, H., A behavioral model of rational choice (1957) Models of man, social and rational: Mathematical essays on rational human behavior in a social setting, pp. 241-260; Pritchard, A., Statistical Bibliography or Bibliometrics (1969) Journal of Documentation, 25, pp. 348-349; Reuters, T., (2008) Using bibliometrics: A guide to evaluating research performance with citation data, , http://ips.clarivate.com/m/pdfs/325133_thomson.pdf; Boshoff, N., Akanmu, M. A., (2017) Scopus or Web of Science for a bibliometric profile of pharmacy research at a Nigerian university?, 83 (2). , http://sajlis.journals.ac.za; Khiste, G. P., Paithankar, R. R., Analysis of Bibliometric term in Scopus (2017) International Journal of Library Science and Information Management (IJLSIM), 3 (3), pp. 81-88; Chan, T. K., Building and construction research in Malaysia: A bibliometric analysis (2019) Journal of Construction in Developing Countries, 24 (1), pp. 65-84. , https://doi.org/10.21315/jcdc22019.21324.21311.21314; Ji, L. L., Huang, L., Huang, G., The evolution of Resources Conservation and Recycling over the past 30 years: A bibliometric overview (2018) Resour. Conserv. Recycl, 134, pp. 34-43. , C (); Ho, Y., Xie, S., Zhang, S., A bibliometric analysis of world volatile organic compounds research trends (2010) Scientometrics, 83 (2), pp. 477-492. , G; Milfont, T. L., Page, E., A bibliometric review of the first thirty years of the Journal of Environmental Psychology (2013) Psyecology, 4 (2), pp. 195-216; Pires, P., De Castro Ribas, R., Lemos, D. C. L., Filgueiras, A., Ecocentrism and behavior: A bibliographic review on environmental values (2014) Psicologia em Estudo, 19 (4), pp. 611-620; Albort-Morant, G., Henseler, J., Leal-Millán, A., Cepeda-Carrión, G., Mapping the field: A bibliometric analysis of green innovation (2017) Sustainability, 9 (6), p. 1011; Pierpaoli, M, Ruello, ML., Indoor air quality: A Bibliometric study (2018) Sustainability, 10 (11), p. 3830; Cheng, S., Zhang, J., Wang, Y., Zhang, D., Teng, G., Chang-Chien, G. P., Yan, P., Global research trends in health effects of volatile organic compounds during the last 16 years: A bibliometric analysis (2019) Aerosol and Air Quality Research, 19 (8), pp. 1834-1843. , Letters; Shankar, D. S., Chung, P. J., Hannah, T., Dreher, N., Li, A. Y., Dai, J. B., Choudhri, T. F., The effect of academic rank and years in practice on bibliometric profile growth rates among academic neurosurgeons in the New York metropolitan area (2020) Interdisciplinary Neurosurgery: Advanced Techniques and Case Management, 19; Wu, Y. M., Hsu, C. T., Hu, H. A., Lu, C. C., A study of relationships among social learning, social norms and pro-environmental behavior (2008) the 3rd International Conference on Innovative Computing Information and Control, , Paper presented at ICICIC'08, Dalian, Liaoning; Torres-Salinas, D, Martín-Martín, A., (2013) An introduction to the coverage of the Data Citation Index (Thomson-Reuters): Disciplines, document types and repositories, , arXiv preprint arXiv:1306.6584. Jun 27; Wright, J. D., (2015) International Encyclopedia of the Social and Behavioral Sciences, , (2nd ed). Elsevier Ltd; (2017) UNESCO moving forward the 2030 Agenda for Sustainable Development, , Https://unesdoc.unesco.org/ark:/48223/pf0000247785, UNESCO. retrieved from; Foo, K. Y., A vision on the role of environmental higher education contributing to the sustainable development in Malaysia (2013) Journal of Cleaner Production, 61, pp. 6-12. , https://doi.org/10.1016/j.jclepro.2013.05.014; Raman, A., Rathakrishnan, M., (2019) Redesigning higher education initiatives for Industry 4.0, , (Eds). IGI Global; (2002) Dasar alam sekitar negara, , Ministry of Natural Resources and Environment. Putrajaya: Malaysia; (2008) Report on National Capacity Needs Self-Assessment for Global Environmental Management and National Capacity Action Plan, , Ministry of Natural Resources and Environment. Putrajaya: Malaysia; (2016) Pelan Strategik ICT 2016-2020, , http://www.kats.gov.my/ms-my/pustakamedia/Penerbitan/Pelan%20Strategik%20ICT%20(ISP)%20NRE%202016-2020.pdf, Ministry of Natural Resources and Environment. Putrajaya Retrieved from; (2016) Rangka Kerja Big Data NRE Putrajaya: Kementerian Sumber Asli dan Alam Sekitar, Bahagian Pengurusan Maklumat, , Ministry of Natural Resources and Environment. Putrajaya: Malaysia; odsakoff, P. M., MacKenzie, S. B., Podsakoff, N. P., Bachrach, D. G., Scholarly influence in the field of management: A bibliometric analysis of the determinants of university and author impact in the management literature in the past quarter century (2008) Journal of Management, 34 (4), pp. 641-720","Mustafa, Z.; School of Computer Sciences, Malaysia; email: zainunmustafa@gmail.com",,,"Phcog.Net",,,,,23216654,,,,"English","J. Scientometr. Res.",Article,"Final","All Open Access, Hybrid Gold",Scopus,2-s2.0-85091844536
"Syed-Mohamad S.M., Md Akhir N.S.","57189082262;57189579636;","SoReady: An Extension of the Test and Defect Coverage-Based Analytics Model for Pull-Based Software Development",2019,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC","2019-December",, 8945520,"9","14",,,"10.1109/APSEC48747.2019.00011","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078206017&doi=10.1109%2fAPSEC48747.2019.00011&partnerID=40&md5=3d04c305f350407d1e098b945e2a54a4","Universiti Sains Malaysia, Penang, Malaysia","Syed-Mohamad, S.M., Universiti Sains Malaysia, Penang, Malaysia; Md Akhir, N.S., Universiti Sains Malaysia, Penang, Malaysia","Pull-based software development is a distributed development model that offers an opportunity to review a pull request before it gets merged into the main repository. A pull request addresses new features,bug fixing,and maintenance issues submitted by both integrators or contributors. It appears that many empirical studies are conducted to discover how pull request evaluation is done,and to our knowledge,limited research exists for assessing release readiness of pull requests. Studies also reported that the failure rate of pull-requests rapidly increases when there are many forks created. It is therefore,questions worth exploring are whether the code review really contributing to the code quality,and how to determine the release readiness of pull requests? In our previous work,test and defect coverage-based analytics model (TDCAM) has been proven to be suitable to determine the readiness of releases for software that is rapidly evolving,in which this is also a characteristic of pull-based software development. In this paper,the TDCAM has been extended to include pull request coverage indicators. The proposed model,namely as SoReady and the visualization analysis presented herein has enabled five developers in a commercial setting to make informed and evidence-based decisions regarding the test status of each pull request and overall reliability of an open source software through a prototype dashboard. ©,2019 IEEE.","agile; defect coverage; metrics; Pull based software development; pull requests; software release readiness; test analytics.; test coverage","Defects; Failure analysis; Open source software; Open systems; Reliability analysis; Software design; Software reliability; Software testing; Testing; agile; Defect coverage; metrics; pull requests; Software release; Test coverage; Software prototyping",,,,,"Universiti Sains Malaysia","ACKNOWLEDGMENT The authors would like to thank the Bridging Research Grant Scheme (304/PKOMP/6316282) and the Research University Grant (1011/PKOMP/8014076) by Universiti Sains Malaysia (USM).",,"Tsay, J., Dabbish, L., Herbsleb, J., Let's talk about it: Evaluating contributions through discussion in github (2014) FSE, ACM, pp. 144-154; Staron, M., Meding, W., Hansson, J., Hoglund, C., Niesel, K., Bergmann, V., Dashboards for continuous monitoring of quality for software product under development (2013) System Qualities and Software Architecture (SQSA); Gousios, G., Pinzger, M., Deursen, A., An exploratory study of the pullbased software development model (2014) ICSE, ACM, pp. 345-355; Gousios, G., Zaidman, A., Storey, M.A., Deursen, A.V., Work practices and challenges in pull-based development: The integrator's perspective (2015) ICSE, IEEE, pp. 358-368; Yu, Y., Li, Z., Yi, G., Wang, T., Wang, H., A dataset of duplicate pullrequests in github (2018) 15th International Conference on Mining Software Repositories, , May 28-29, Gothenburg, Sweden ACM; Tsay, J., Dabbish, L., Herbsleb, J., Influence of social and technical factors for evaluating contribution in github (2014) Proceedings of the 36th International Conference on Software Engineering, pp. 356-366. , ACM; Yu, Y., Wang, H., Filkov, V., Devanbu, P., Vasilescu, B., Wait for it: Determinants of pull request evaluation latency on github (2015) MSR, IEEE, pp. 367-371; Saito, Y., Fujiwara, K., Igaki, H., Yoshida, N., Iida, H., How do github users feel with pull-based development (2016) 7th International Workshop on Empirical Software Engineering in Practice (IWESEP); Musa, J.D., Software reliability-engineered testing (1996) Computer, 29 (11), pp. 61-68; Syed-Mohamad, S.M., Haron, N.H., McBride, T., Test adequacy assessment using test-defect coverage analytic model (2017) Journal of Telecommunication, Electronic and Computer Engineering (JTEC), 9 (3-5), pp. 191-196; Syed-Mohamad, S.M., Husin, M.H., Zainon, W.M.N.W., Visualizing test-defect coverage information to support analytical reasoning and testing (2019) Proceedings of the 2019 8th International Conference on Software and Computer Applications, pp. 184-188. , ACM; Herzig, K., Nagappan, A.N., The impact of test ownership and team structure on the reliability and effectiveness of quality test runs (2014) Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement; Inozemtseva, L., Holmes, R., Coverage is not strongly correlated with test suite effectiveness (2014) ICSE '14, ACM, pp. 435-445; Lyu, M.R., Software reliability engineering: A roadmap (2007) Future of Software Engineering IEEE Computer Society, pp. 153-170; Davis, W.S., Hipo hierarchy plus input-process-output (1998) The Information System Consultant's Handbook: Systems Analysis and Design, pp. 503-510. , CRC, Florida",,,,"IEEE Computer Society","26th Asia-Pacific Software Engineering Conference, APSEC 2019","2 December 2019 through 5 December 2019",,156573,15301362,9781728146485,,,"English","Proc. Asia Pac. Softw. Eng. Conf. APSEC",Conference Paper,"Final","",Scopus,2-s2.0-85078206017
"Alial-Sai Z., Abdullah R., Husin M.H., Syed-Mohamad S.M.","57211628877;7004462407;55488475000;57189082262;","A preliminary systematic performanceon critical success factors categories for big data analytics",2019,"International Journal of Engineering and Advanced Technology","9","1",,"2320","2324",,2,"10.35940/ijeat.A2657.109119","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074632033&doi=10.35940%2fijeat.A2657.109119&partnerID=40&md5=707dbae5d774aa21afefca5db50343f5","School of Computer Sciences, Universiti Sains Malaysia, Malaysia","Alial-Sai, Z., School of Computer Sciences, Universiti Sains Malaysia, Malaysia; Abdullah, R., School of Computer Sciences, Universiti Sains Malaysia, Malaysia; Husin, M.H., School of Computer Sciences, Universiti Sains Malaysia, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Malaysia","Big Data could be used in any industry to make effective data-driven decisions. The successful implementation of Big Data projects requires a combination of innovative technological, organizational, and processing approaches. Over the last decade, the research on Critical Success Factors (CSFs) within Big Data has developed rapidly but the number of available publications is still at a low level. Developing an understandingof the Critical Success Factors (CSFs) and their categoriesare essential to support management in making effective data-driven decisions which could increase their returns on investments.There islimited research conducted on the Critical Success Factors (CSFs) of Big DataAnalytics (BDA) development and implementation.This paper aims to provide more understanding about the availableCritical Success Factors (CSFs) categoriesfor Big Data Analytics implementation and answer the research question (RQ) “What are the existing categories of Critical Success Factors for Big Data Analytics”.Based on a preliminary Systematic Literature Review (SLR) for the available publications related to Big Data CSFs and their categories in the last twelve years (2007-2019),this paper identifiesfive categoriesfor Big Data AnalyticsCritical Success Factors(CSFs), namelyOrganization, People, Technology, Data Management, and Governance categories. © BEIESP.","Big data; Big data analytics; Big data critical success factors; Critical Success Factors (CSFs)",,,,,,,,,"Adrian, C., (2017) Factors Influencing to the Implementation Success of Big Data Analytics: A Systematic Literature Review, , IEEE; Labrinidis, A., Jagadish, H.V., Challenges and Opportunities with Big Data (2012) Proceedings of the VLDB Endowment, pp. 1-15; Caralli, R.A., (2004) The Critical Success Factor Method: Establishing a Foundation for Enterprise Security Management., (July); Cato, P., Golzer, P., Demmelhuber, W., An investigation into the implementation factors affecting the success of big data systems (2016) Proceedings-2015 11Th International Conference on Innovations in Information Technology, IIT 2015, pp. 134-139; Chen, H.M., Amazon in the air: Innovating with big data at Lufthansa (2016) Proceedings of the Annual Hawaii International Conference on System Sciences 2016, 2016–March, pp. 5096-5105; Evers, J.M., (2014) Critical Success Factors of Business Intelligence and Big Data Analysis, , Master Thesis; Eybers, S., Hattingh, M.J., Critical success factor categories for big data: A preliminary analysis of the current academic landscape (2017) 2017 Ist-Africa Week Conference (Ist-Africa), pp. 1-11. , http://ieeexplore.ieee.org/document/8102327/; Félix, B.M., Tavares, E., Cavalcante, N.W.F., Critical success factors for Big Data adoption in the virtual retail: Magazine Luiza case study (2018) Revistabrasileira De Gestao De Negocios, 20 (1), pp. 112-126; Galetto, M., (2018) What is Data Management?-Ngdata, , https://www.ngdata.com/what-is-data-management/, Available at; Gao, J., Koronios, A., Selle, S., Towards A Process View on Critical Success Factors in Big Data Analytics Projects (2015) Twenty-First Americas Conference on Information Systems, pp. 1-14; Gómez, L.F., Heeks, R., (2016) Measuring the Barriers to Big Data for Development: Design-Reality Gap Analysis in Colombia’s Public Sector, , http://www.digitale-chancen.de/transfer/downloads/MD280.pdf; Halaweh, M., Massry, A.E., Conceptual Model for Successful Implementation of Big Data in Organizations (2015) Journal of International Technology and Information Management, 24 (2), pp. 21-29; Hayen, R.L., Rutashobya, D., Vetter, D.E., (2007) An Investigation of the Factors Affecting Data Warehousing Success. International Association for Computer Inform Ation Systems, 8 (2), pp. 547-553; Khan, S., A survey on scholarly data: From big data perspective (2017) Information Processing and Management, 53 (4), pp. 1339-1351; Kim, M.K., Park, J.H., Identifying and prioritizing critical factors for promoting the implementation and usage of big data in healthcare (2017) Information Development, 33 (3), pp. 257-269; Kitchenham, B., Guidelines for performing Systematic Literature Reviews in Software Engineering (2007) Software Engineering Group School of Computer Science and Mathematics, p. 65; Kitchenham, B., (2004) Procedures for Performing Systematic Reviews; Koronios, A., Gao, J., Selle, S., (2014) Big Data Project Success – a Meta Analysis, , Pacis; Lavalle, S., (2011) Big Data, Analytics and the Path from Insights to Value., , (52205); Nieder, N., (2016) Effective Big Data Management: A Development of Critical Success Factors and an Analysis of Firms’ Capabilities in the Automotive Industry; Saltz, J.S., Shamshurin, I., Big data team process methodologies: A literature review and the identification of key factors for a project’s success (2016) Proceedings-2016 IEEE International Conference on Big Data, Big Data 2016, pp. 2872-2879; Schüll, A., Maslan, N., On the Adoption of Big Data Analytics: Interdependencies of Contextual Factors (2018) International Conference on Enterprise Information Systems (ICEIS 2018), pp. 425-431; (2012) Data Management Definition, , http://www.techterms.com/definition/data_management; Veeneman, W., PETRA: Governance as a key success factor for big data solutions in mobility (2018) Research in Transportation Economics, 69, pp. 420-429. , https://doi.org/10.1016/j.retrec.2018.07.003, May, Available at; Wang, Y., Kung, L.A., Byrd, T.A., Big data analytics: Understanding its capabilities and potential benefits for healthcare organizations (2016) Technological Forecasting and Social Change, 126, pp. 3-13. , http://dx.doi.org/10.1016/j.techfore.2015.12.019; Yeoh, W., Popovic, A., Extending The Understanding Of Critical Success Factors For Implementing Business Intelligence Systems (2015) Journal of the Association for Information Science and Technology, 3 (2), pp. 80-90",,,,"Blue Eyes Intelligence Engineering and Sciences Publication",,,,,22498958,,,,"English","Int. J. Eng. Adv. Technol.",Article,"Final","All Open Access, Bronze",Scopus,2-s2.0-85074632033
"Fazayeli H., Syed-Mohamad S.M., Md Akhir N.S.","57207298774;57189082262;57189579636;","Towards auto-labelling issue reports for pull-based software development using text mining approach",2019,"Procedia Computer Science","161",,,"585","592",,1,"10.1016/j.procs.2019.11.160","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078895752&doi=10.1016%2fj.procs.2019.11.160&partnerID=40&md5=7973efacd260dac20c3612c80a6e16ec","School of Computer Science, Universiti Sains Malaysia, USM, Pulau Pinang, 11800, Malaysia","Fazayeli, H., School of Computer Science, Universiti Sains Malaysia, USM, Pulau Pinang, 11800, Malaysia; Syed-Mohamad, S.M., School of Computer Science, Universiti Sains Malaysia, USM, Pulau Pinang, 11800, Malaysia; Md Akhir, N.S., School of Computer Science, Universiti Sains Malaysia, USM, Pulau Pinang, 11800, Malaysia","In recent years continuous integration has become an important practice for pull-based software development. It helps developers make contributions flexibly to an isolated copy of the project's repository, create a pull request that represent such changes, and submit it to the project for evaluation. Despite its test centric approach, the ability of teams to scale up distributed development is limited by the manually demanding task of adding and updating labels to an issue report. Automating this step enables a project to produce quality results. We categorized issue reports to derive a specific classification of issue reports of pull-based development projects. Given that manual classification of issues is a tedious task and needs an expert domain knowledge, auto-classification is extremely needed. We considered different strategies and developed diverse text analytics techniques for automatic labelling issue reports of a GitHub's project. We applied J48, SMO, Naïve Byes, and LibSVM algorithms so that different classification models are produced. Our results showed that SMO is able to label the issue reports with accuracy of 87.15 and F-measure of 0.869, when both the title and the body description of issues are considered in a balanced binary classification model. © 2019 The Authors.","Continuous integration; GitHub; Issue reports; Pull-based software development; Text classification","Classification (of information); Information systems; Information use; Tellurium compounds; Text processing; Binary classification; Classification models; Continuous integrations; Distributed development; GitHub; Issue reports; Manual classification; Text classification; Software design",,,,,,,,"Vasilescu, B., Yu, Y., Wang, H., Devanbu, P., Filkov, V., Quality and productivity outcomes relating to continuous integration in GitHub (2015) Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering, pp. 805-816. , August ACM; Hilton, M., Tunnell, T., Huang, K., Marinov, D., Dig, D., Usage, costs, and benefits of continuous integration in open-source projects (2016) Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering, pp. 426-437. , August ACM; Gousios, G., Pinzger, M., Deursen, A.V., An exploratory study of the pull-based software development model (2014) Proceedings of the 36th International Conference on Software Engineering, pp. 345-355. , May ACM; Pham, R., Singer, L., Liskin, O., Figueira Filho, F., Schneider, K., Creating a shared understanding of testing culture on a social coding site (2013) Proceedings of the 2013 International Conference on Software Engineering, pp. 112-121. , May IEEE Press; Zhao, Y., Serebrenik, A., Zhou, Y., Filkov, V., Vasilescu, B., The impact of continuous integration on other software development practices: A large-scale empirical study (2017) 2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 60-71. , October IEEE; D'Ambros, M., Lanza, M., Robbes, R., An extensive comparison of bug prediction approaches (2010) 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), pp. 31-41. , May IEEE; Herzig, K., Just, S., Zeller, A., It's not a bug, it's a feature: How misclassification impacts bug prediction (2013) Proceedings of the 2013 International Conference on Software Engineering, pp. 392-401. , May IEEE Press; Zeller, A., Can we trust software repositories? (2013) Perspectives on the Future of Software Engineering, pp. 209-215. , Springer, Berlin, Heidelberg; Kikas, R., Dumas, M., Pfahl, D., Using dynamic and contextual features to predict issue lifetime in GitHub projects (2016) Proceedings of the 13th International Conference on Mining Software Repositories, pp. 291-302. , May ACM; Hayes, P.J., Anderson, P.M., Nirenburg, I.B., Schmandt, L.M., TCS: A shell for content-based text categorization (1990) Artificial Inteligence Applications, 1990., Sixth Conference on, pp. 320-326; Antoniol, G., Ayari, K., Di Penta, M., Khomh, F., Guéhéneuc, Y.G., Is it a bug or an enhancement?: A text-based approach to classify change requests (2008) CASCON, 8, pp. 304-318. , October; Nagwani, N.K., Verma, S., Clubas: An algorithm and Java based tool for software bug classification using bug attributes similarities (2012) Journal of Software Engineering and Applications, 5 (6), p. 436; Thung, F., Lo, D., Jiang, L., Automatic defect categorization (2012) 2012 19th Working Conference on Reverse Engineering, pp. 205-214. , October IEEE; Malhotra, R., Comparative analysis of statistical and machine learning methods for predicting faulty modules (2014) Applied Soft Computing, 21, pp. 286-297; Diana-Lucia, M., Czibula, G., Czibula, I.G., A novel approach for software defect prediction through hybridizing gradual relational association rules with artificial neural networks (2018) Information Sciences; Jurado, F., Rodriguez, P., Sentiment analysis in monitoring software development processes: An exploratory case study on GitHub's project issues (2015) Journal of Systems and Software, 104, pp. 82-89; Kikas, R., Dumas, M., Pfahl, D., Using dynamic and contextual features to predict issue lifetime in GitHub projects (2016) Proceedings of the 13th International Conference on Mining Software Repositories, pp. 291-302. , May ACM; Sebastiani, F., Machine learning in automated text categorization (2002) ACM Computing Surveys (CSUR), 34 (1), pp. 1-47; Oliphant, T.E., Python for scientific computing (2007) Computing in Science & Engineering, 9 (3), pp. 10-20; Hall, M., Frank, E., Holmes, G., Pfahringer, B., Reutemann, P., Witten, I.H., The WEKA data mining software: An update (2009) ACM SIGKDD Explorations Newsletter, 11 (1), pp. 10-18; Geisser, S., The predictive sample reuse method with applications (1975) J. Amer. Statist. Assoc., 70, pp. 320-328; Marcus, M.P., Marcinkiewicz, M.A., Santorini, B., Building a large annotated corpus of English: The Penn Treebank (1993) Computational Linguistics, 19, pp. 313-330; Porter, M.F., (2001) Snowball: A Language for Stemming Algorithms; Witten, I.H., Frank, E., Hall, M.A., Pal, C.J., (2016) Data Mining: Practical Machine Learning Tools and Techniques, , Morgan Kaufmann; Salton, G., Buckley, C., Term-weighting Approaches in Automatic Text Retrieval (1998) Information Processing & Management, 2, pp. 513-523; Marill, T., Green, D.M., O the effectiveness of reportors in recognition systems Information Theory, IEEE Transactions on, 9, pp. 11-17; Chakrabarti, S., Roy, S., Soundalgekar, M.V., Fast and accurate text classification via multiple linear discriminant projections (2003) The VLDB Journal, 12 (2), pp. 170-185; McCallum, A., Nigam, K., A comparison of event models for naive Bayes text classification (1998) AAAI-98 Workshop on Learning for Text Categorization, 752, pp. 41-48. , July; Ross Quinlan, J., C4. 5: Programs for machine learning (1993) Mach. Learn, 16 (3), pp. 235-240; Platt, J.C., Sequential minimal optimization: A fast algorithm for training support vector machines (1999) Advances in KerneI Metbods Support Vector, pp. 185-208. , MIT Press, Cambridge, MA; Chang, C.C., Lin, C.J., LiBSVM: A library for support vector machines (2011) ACM Transactions on Intelligent Systems and Technology (TIST), 2 (3), p. 27","Syed-Mohamad, S.M.; School of Computer Science, Malaysia; email: mashita@usm.my","Younus A.",,"Elsevier B.V.","5th Information Systems International Conference, ISICO 2019","23 July 2019 through 24 July 2019",,156995,18770509,,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85078895752
"Jothi N., Husain W., Rashid N.A.A., Syed-Mohamad S.M.","54928769700;55968976100;7003757702;57189082262;","Feature Selection Method using Genetic Algorithm for Medical Dataset",2019,"International Journal on Advanced Science, Engineering and Information Technology","9","6",,"1907","1912",,1,"10.18517/ijaseit.9.6.10226","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077983375&doi=10.18517%2fijaseit.9.6.10226&partnerID=40&md5=72f94e2324cde0f446d9668ac1c23b35","School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia","Jothi, N., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia; Husain, W., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia; Rashid, N.A.A., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia","There is a massive amount of high dimensional data that is pervasive in the healthcare domain. Interpreting these data continues as a challenging problem and it is an active research area due to their nature of high dimensional and low sample size. These problems produce a significant challenge to the existing classification methods in achieving high accuracy. Therefore, a compelling feature selection method is important in this case to improve the correctly classify different diseases and consequently lead to help medical practitioners. The methodology for this paper is adapted from KDD method. In this work, a wrapper-based feature selection using the Genetic Algorithm (GA) is proposed and the classifier is based on Support Vector Machine (SVM). The proposed algorithms was tested on five medical datasets naming the Breast Cancer, Parkinson's, Heart Disease, Statlog (Heart), and Hepatitis. The results obtained from this work, which apply GA as feature selection yielded competitive results on most of the datasets. The accuracies of the said datasets are as follows: Breast Cancer-72.71%, Parkinson's-88.36%, Heart Disease-86.73%, Statlog (Heart)-85.48 %, and Hepatitis-76.95%. This prediction method with GA as feature selection will help medical practitioners to make better diagnose with patient's disease. © Insight Society.","Data mining; Data mining in healthcare; Feature selection; Genetic algorithm; Medical dataset",,,,,,"Universiti Sains Malaysia","This work is supported by the Research University Grant (RUI)(1011/PKOMP/8014076) by Universiti Sains Malaysia (USM).",,"Lavrač, N., Selected techniques for data mining in medicine (1999) Artif. Intell. Med, 16 (1), pp. 3-23; Fayyad, U., Piatetsky-Shapiro, G., Smyth, P., From data mining to knowledge discovery in databases (1996) AI Mag, 17 (3), pp. 37-54; Yoo, I., Data mining in healthcare and biomedicine: A survey of the literature (2012) J. Med. Syst, 36 (4), pp. 2431-2448; Sheikhtaheri, A., Sadoughi, F., Hashemi Dehaghi, Z., Developing and using expert systems and neural networks in medicine: A review on benefits and challenges (2014) J. Med. Syst, 38 (9); Yang, J.-J.J., Emerging information technologies for enhanced healthcare (2015) Comput. Ind, 69, pp. 3-11; Liao, B., (2015) For High-Throughput Data Analysis, 12 (6), pp. 1374-1384; Peña-Ayala, A., Educational data mining: A survey and a data mining-based analysis of recent works (2014) Expert Syst. Appl, 41 (4), pp. 1432-1462; Osman, I.H., Kelly, J.P., Meta-Heuristics: An Overview (1996) Meta-Heuristics, pp. 1-21. , Boston, MA: Springer US; Salem, H., Attiya, G., El-Fishawy, N., Classification of human cancer diseases by gene expression profiles (2017) Appl. Soft Comput. J, 50, pp. 124-134; Paul, A.K., Shill, P.C., Rabin, M.R.I., Akhand, M.A.H., Genetic algorithm based fuzzy decision support system for the diagnosis of heart disease (2016) 2016 5th Int. Conf. Informatics, Electron. Vision, ICIEV 2016, pp. 145-150; Dua, C., Dheeru, Graff, (2017) [UCI] Machine Learning Repository, , University of California, Irvine, School of Information and Computer Sciences; Chatterjee, S., Hore, S., Dey, N., (2017) Dengue Fever Classification Using Gene Expression Data: A PSO Based Artificial Neural Network Approach, 515, pp. 331-341; Shahsavari, M.K., Rashidi, H., Bakhsh, H.R., Efficient classification of Parkinson's disease using extreme learning machine and hybrid particle swarm optimization (2016) 2016 4th Int. Conf. Control. Instrumentation, Autom. ICCIA 2016, pp. 148-154. , no. January; Shunmugapriya, P., Kanmani, S., A hybrid algorithm using ant and bee colony optimization for feature selection and classification (AC-ABC Hybrid) (2017) Swarm Evol. Comput, 36, pp. 27-36; Subanya, B., Rajalaxmi, R.R., Feature selection using artificial bee colony for cardiovascular disease classification (2014) 2014 Int. Conf. Electron. Commun. Syst. ICECS 2014, pp. 1-6; Kantardzic, M., (2003) Data mining: Concepts, methods and algorithms, , Wiley-IEEE Press; Prilutsky, D., Rogachev, B., Marks, R.S., Lobel, L., Last, M., Classification of infectious diseases based on chemiluminescent signatures of phagocytes in whole blood (2011) Artif. Intell. Med, 52 (3), pp. 153-163; Samanta, B., Prediction of periventricular leukomalacia. Part I: Selection of hemodynamic features using logistic regression and decision tree algorithms (2009) Artif. Intell. Med, 46 (3), pp. 201-215; Lehmann, T.M., Automatic categorization of medical images for content-based retrieval and data mining (2005) Comput. Med. Imaging Graph, 29 (2-3), pp. 143-155; Liu, R., Chen, Y., Jiao, L., Li, Y., A particle swarm optimization based simultaneous learning framework for clustering and classification (2014) Pattern Recognit, 47 (6), pp. 2143-2152; Hong, T., Lin, K., Wang, S., Fuzzy Data Mining for Interesting Generalized Association Rules (2003) Fuzzy Sets Syst, 138, pp. 255-269; Hardoon, D., Szedmak, S., Shawe-Taylor, J., Canonical Correlation Analysis: An Overview with Application to Learning Methods (2004) Neural Comput, 16 (12), pp. 2639-2664; Liu, B., Xiao, Y., Cao, L., Hao, Z., Deng, F., SVDD-based outlier detection on uncertain data (2013) Knowl. Inf. Syst, 34 (3), pp. 597-618; Khateeb, N., Usman, M., (2018) Efficient Heart Disease Prediction System using K-Nearest Neighbor Classification Technique, pp. 21-26; Hashi, E.K., Uz Zaman, M.S., Hasan, M.R., An expert clinical decision support system to predict disease using classification techniques (2017) ECCE 2017-Int. Conf. Electr. Comput. Commun. Eng, pp. 396-400; Enriko, I.K.A., Suryanegara, M., Gunawan, D., Heart disease prediction system using k-Nearest neighbor algorithm with simplified patient's health parameters (2016) J. Telecommun. Electron. Comput. Eng, 8 (12), pp. 59-65; Rustam, Z., Utami, D.A., Hidayat, R., Pandelaki, J., Nugroho, W.A., (2019) Hybrid Preprocessing Method for Support Vector Machine for Classification of Imbalanced Cerebral Infarction Datasets, 9 (2), pp. 685-691; Shankar, K., Lakshmanaprabu, S.K., Gupta, D., Maseleno, A., de Albuquerque, V.H.C., Optimal feature-based multi-kernel SVM approach for thyroid disease classification (2018) J. Supercomput, pp. 1-16; Vijayarani, S., Dhayanand, S., Kidney Disease Prediction Using SVM and ANN Algorithms (2015) Int. J. Comput. Bus. Res. ISSN (Online, 6 (2), pp. 2229-6166; Thomas, J., Princy, R.T., Human heart disease prediction system using data mining techniques (2016) Proc. IEEE Int. Conf. Circuit, Power Comput. Technol. ICCPCT 2016, pp. 1-5; Sultana, M., Haider, A., Uddin, M.S., Analysis of data mining techniques for heart disease prediction (2017) 2016 3rd Int. Conf. Electr. Eng. Inf. Commun. Technol. iCEEiCT 2016; Baitharu, T.R., Pani, S.K., Analysis of Data Mining Techniques for Healthcare Decision Support System Using Liver Disorder Dataset (2016) Procedia Comput. Sci, 85, pp. 862-870. , Cms; Paul, D., Su, R., Romain, M., Sébastien, V., Pierre, V., Isabelle, G., Feature selection for outcome prediction in oesophageal cancer using genetic algorithm and random forest classifier (2017) Comput. Med. Imaging Graph, 60, pp. 42-49; Kumar, M., Kumar, M., International Journal of Computer Science and Mobile Computing Prediction of Chronic Kidney Disease Using Random Forest Machine Learning Algorithm (2016) Int. J. Comput. Sci. Mob. Comput, 5 (2), pp. 24-33; Husain, W., Xin, L.K.L.K., Abdul Rashid, N., Jothi, N., Rashid, N.A., Jothi, N., Predicting Generalized Anxiety Disorder Among Women Using Random Forest Approach (2016) 2016 3rd International Conference On Computer And Information Sciences (ICCOINS), pp. 42-47; Lichman, M., Bache, K., Lichman, M., (2013) UCI machine learning repository; Santhanam, T., Padmavathi, M.S., Application of K-Means and Genetic Algorithms for Dimension Reduction by Integrating SVM for Diabetes Diagnosis (2015) Procedia Comput. Sci, 47, pp. 76-83; Maldonado, S., Weber, R., Famili, F., Feature selection for high-dimensional class-imbalanced data sets using Support Vector Machines (2014) Inf. Sci. (Ny), 286, pp. 228-246; Kamruzzaman, J., Lim, S., Gondal, I., Begg, R., Gene selection and classification of human lymphoma from microarray data (2005) Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect. Notes Bioinformatics), 3745, pp. 379-390; Noble, W.S., Support vector machine applications in computational biology (2004) Kernel Methods Comput. Biol; Zhang, D., Zuo, W., Zhang, D., Zhang, H., Time series classification using support vector machine with Gaussian elastic metric kernel (2010) Proceedings-International Conference on Pattern Recognition; Caruana, R., Niculescu-Mizil, A., Data mining in metric space: An empirical analysis of supervised learning performance criteria (2004) Proc. tenth ACM SIGKDD Int. Conf. Knowl. Discov. data Min, pp. 69-78; Huang, C.-L., Liao, H.-C., Chen, M.-C., Prediction model building and feature selection with support vector machines in breast cancer diagnosis (2008) Expert Syst. Appl, 34 (1), pp. 578-587; Akay, M.F., Support vector machines combined with feature selection for breast cancer diagnosis (2009) Expert Syst. Appl, 36 (2), pp. 3240-3247",,,,"Insight Society",,,,,20885334,,,,"English","Int. J. Adv. Sci. Eng. Inf. Technol.",Article,"Final","All Open Access, Hybrid Gold",Scopus,2-s2.0-85077983375
"Ahmad Ibrahim M.M., Syed-Mohamad S.M., Husin M.H.","57208881227;57189082262;55488475000;","Managing quality assurance challenges of Devops through analytics",2019,"ACM International Conference Proceeding Series","Part F147956",,,"194","198",,1,"10.1145/3316615.3316670","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066031481&doi=10.1145%2f3316615.3316670&partnerID=40&md5=99ea48b74e9e6bfe2dba9dc661a5609a","School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia","Ahmad Ibrahim, M.M., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia; Husin, M.H., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia","DevOps is an intermarriage between developmental practices and operational modalities. The methodology employs the practices of continuous integration and delivery and places the deployment pipeline as the main requirement to automate, deliver and operate software in a robust way, without compromising on the quality in the software development process. Over time, many systems and tools have been developed to implement the deployment pipeline and support the continuous delivery process. A pipeline splits the process of software delivery into various stages. Each stage is designed to verify the quality of new features from a new perspective to attest to the functionality and prevent either small or big errors from impacting the end users. The pipeline must provide a response and feedback loop to the concerned team and provide a window into the flow of changes that takes place. However, there is no clear rule to define what goes into a pipeline. This paper reviews the challenges of quality assurance of DevOps and provides tentative recommendations to deal with quality issues. Our proposed pipeline with analytic features is expected to provide accurate metrics on a real-time basis. © 2019 Association for Computing Machinery.","Continuous delivery; Continuous deployment; Continuous integration; Deployment pipeline; DevOps; Devops analytics; Quality assurance","Application programs; Continuous time systems; Quality assurance; Software design; Continuous delivery; Continuous deployment; Continuous integrations; DevOps; Devops analytics; Pipelines",,,,,"Universiti Sains Malaysia, USM: 304.PKOMP.6316282","The authors would like to thank the Universiti Sains Malaysia Bridging Research Grant Scheme (304.PKOMP.6316282) for the financial support.",,"Chakraborty, A., Ramachandran, K.K., Yamijala, S.S.R.K.C., Pati, S.K., Maji, T.K., A hexanuclear Cu(i) cluster supported by cuprophilic interaction: Effects of aromatics on luminescence properties (2014) RSC Adv, 4 (66), pp. 35167-35170; Shahin, M., Zahedi, M., Ali Babar, M., Zhu, L., Babar, M.A., Zhu, L., (2018) An Empirical Study of Architecting for Continuous Delivery and Deployment, , Springer; Perera, P., Silva, R., Perera, I., Improve software quality through practicing DevOps (2018) 17th International Conference on Advances in ICT for Emerging Regions, ICTer 2017 - Proceedings, 2018, pp. 13-18. , Janua; Qumer Gill, A., Loumish, A., Riyat, I., Han, S., Devops for information management (2018) VINE J. Inf. Knowl. Manag. Syst., 48 (1), pp. 122-139; Steffens, A., Lichter, H., Döring, J.S., (2018) Designing A Next-Generation Continuous Software Delivery System: Concepts and Architecture, pp. 1-7; Senapathi, M., Buchan, J., Osman, H., Devops capabilities, practices, and challenges (2018) Proc. 22nd Int. Conf. Eval. Assess. Softw. Eng. 2018 - EASE’18, pp. 57-67; (2016) World Quality Report 2015–16; Humble, J., Farley, D., (2010) Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Adobe Reader), , Pearson Education; Bass, L., Weber, I., Zhu, L., (2015) DevOps: A Software Architect’S Perspective, , Pearson Education; Arachchi, S.A.I.B.S., Perera, I., (2018) Continuous Integration and Continuous Delivery Pipeline Automation for Agile Software Project Management, , May; Shahin, M., Ali Babar, M., Zhu, L., Continuous integration, delivery and deployment: A systematic review on approaches, tools, challenges and practices (2017) IEEE Access, 5, pp. 3909-3943. , Ci; Perera, P., Bandara, M., Perera, I., Evaluating the impact of DevOps practice in Sri Lankan software development organizations (2017) 16th Int. Conf. Adv. ICT Emerg. Reg. ICTer 2016 - Conf. Proc., pp. 281-287; Chen, L., Continuous delivery: Huge benefits, but challenges too (2015) IEEE Softw; Shahin, M., Babar, M.A., Zahedi, M., Zhu, L., Beyond continuous delivery: An empirical investigation of continuous deployment challenges (2017) International Symposium on Empirical Software Engineering and Measurement, 2017, pp. 111-120. , Novem; Laukkanen, E., Lehtinen, T.O.A., Itkonen, J., Paasivaara, M., Lassenius, C., Bottom-up adoption of continuous delivery in a stage-gate managed software organization (2016) Proc. 10th ACM/IEEE Int. Symp. Empir. Softw. Eng. Meas. - ESEM’16, pp. 1-10; Hawk, H., (2019) IBM Cloud Continuous Delivery: Build, Deploy, and Manage Apps with Toolchains, , https://www.ibm.com/cloud/garage/content/deliver/tool_continuous_delivery, Accessed: 02-Jan; Gerstner, S., (2018) Cognitive QA – Leveraging AI and Analytics for Data Driven QA, , https://www.sogeti.no/globalassets/norway/downloads/testexpo/test-expo-2018-downloads/stefan-gerstner-cognitive-qa-leveraging-ai-and-analytics-for-data-driven-qa.pdf, Accessed: 02-Jan-2019","Syed-Mohamad, S.M.; School of Computer Sciences, Malaysia; email: mashita@usm.my",,"University of New Brunswick","Association for Computing Machinery","8th International Conference on Software and Computer Applications, ICSCA 2019","19 February 2019 through 21 February 2019",,147956,,9781450365734,,,"English","ACM Int. Conf. Proc. Ser.",Conference Paper,"Final","",Scopus,2-s2.0-85066031481
"Syed-Mohamad S.M., Husin M.H., Wan Zainon W.M.N.","57189082262;55488475000;48361987800;","Visualizing test-defect coverage information to support analytical reasoning and testing",2019,"ACM International Conference Proceeding Series","Part F147956",,,"184","188",,1,"10.1145/3316615.3316666","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066021598&doi=10.1145%2f3316615.3316666&partnerID=40&md5=654246faaa831ebcdc10d84de316fe6c","School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia","Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia; Husin, M.H., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia; Wan Zainon, W.M.N., School of Computer Sciences, Universiti Sains Malaysia, USM Penang, 11800, Malaysia","Software testing is an essential activity in all software projects. The key issue in testing is determining the sufficiency of tests and, traditionally this has been done by using the Software Reliability Growth Models (SRGMs). However, SRGMs are not applicable when there are no stabilization phases as required by most software reliability models. Test-Defect Coverage Analytics Model (TDCAM) has been proposed to address this problem. This paper proposes the application of visual analytic techniques as an approach for supporting informed decision making in deciding the sufficiency of tests. Visual analytics research considers interactive visualization as the common platform for combining various computational data analysis techniques to support the analytical reasoning process. We presented four visual representations of TDCAM to demonstrate how analytical models have been applied to indicate the adequacy of tests in relation to sufficient and efficient test coverage. The techniques provide an effective and generally applicable test estimation on the basis of a general trend that higher test coverage correlates with higher probability of detecting more defects. © 2019 Association for Computing Machinery.","Software reliability; Software testing; Software visualization; Test analytics; Visual analytics","Application programs; Data visualization; Decision making; Software reliability; Testing; Visualization; Analytic technique; Analytical reasoning; Interactive visualizations; Software reliability growth models; Software reliability models; Software visualization; Visual analytics; Visual representations; Software testing",,,,,"Universiti Sains Malaysia, USM: 304.PKOMP.6316282","The authors would like to thank the Universiti Sains Malaysia Bridging Research Grant Scheme (304.PKOMP.6316282) for the financial support. A great acknowledgement also goes to the students of the CPT441 Software Quality Assurance and Testing of USM who participated in this project for their detailed and valuable information.",,"Jihyun, L., Kang, S., Lee, D., Survey on software testing practices (2012) IET Software, 6 (3), pp. 275-282; Zhu, H., Hall, P., May, J.H.R., Software unit test coverage and adequacy (1997) ACM Comput. Surv., 29 (4), pp. 366-427; Graves, T.L., Karr, A.F., Marron, J.S., Siy, H., Predicting Fault Incidence Using; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Software Engineering, ICSE 2005, Proceedings. 27th International Conference on. IEEE., pp. 284-292; Syed-Mohamad, S.M., (2012) An Empirical Investigation of Software Reliability Indicators, , PhD thesis, University of Technology, Sydney; Inozemtseva, L., Holmes, R., Coverage is not strongly correlated with test suite effectiveness (2014) Proceedings of the 36th International Conference on Software Engineering, pp. 435-445; Frankl, P.G., Hamlet, R.G., Littlewood, B., Strigini, L., Evaluating testing methods by delivered reliability (1998) IEEE Trans. Softw. Eng., 24 (8), pp. 586-601; Mala, J.D., Mohan, V., Kamalapriya, M., Automated software test optimisation framework - An artificial bee colony optimisation-based approach (2010) IET Software, 4 (5), pp. 334-348; Inozemtseva, L., Holmes, R., Coverage is not strongly correlated with test suite effectiveness (2014) ICSE’14, pp. 435-445; Thomas, J., Cook, K., (2005) Illuminating the Path: The Research and Development Agenda for Visual Analytics, , IEEE Press; Keim, D., Scaling visual analytics to very large data sets (2005) Proceedings Workshop Visual Analytics; Keim, A.D.K., Florian, M., Thomas, J., Visual analytics: How much visualization and how much analytics? (2010) SIGKDD Explor. Newsl., 11 (2), pp. 5-8. , http://dx.doi.org/10.1145/1809400.1809403, May 2010; Liechti, O., Pasquier, J., Reis, R., Supporting agile teams with a test analytics platform: A case study (2017) IEEE/ACM 12th International Workshop on Automation of Software Testing (AST), pp. 9-15. , Buenos Aires, 2017; Maletic, J.I., Mosora, D.J., Newman, C.D., Collard, M.L., Sutton, A., Robinson, B.P., Mosaicode: Visualizing large scale software: A tool demonstration (2011) 2011 6th IEEE International Workshop on Visualizing Software for Understanding and Analysis (VISSOFT), pp. 1-4; Syed Mohamad, S.M., Haron, N.H., McBride, T., Test adequacy assessment using test-defect coverage analytic model (2017) Journal of Telecommunication, Electronic and Computer Engineering; Jureczko, M., Significance of different software metrics in defect prediction (2011) Software Engineering: An International Journal, 1 (1), pp. 86-95; Halliday, S., Badenhorst, K., Solms, R.V., A business approach to effective information technology risk analysis and management (1996) Information Management & Computer Security, 4 (1), pp. 19-31. , 1996; Chambers, J., Cleveland, W., Kleiner, B., Tukey, P., Graphical methods for data analysis (1983) Wadsworth, pp. 158-162; Sacha, D., Stoffel, A., Stoffel, F., Kwon, B.C., Ellis, G., Keim, D.A., Knowledge generation model for visual analytics (2014) IEEE Transactions on Visualization and Computer Graphics, 20 (12), pp. 1604-1613",,,"University of New Brunswick","Association for Computing Machinery","8th International Conference on Software and Computer Applications, ICSCA 2019","19 February 2019 through 21 February 2019",,147956,,9781450365734,,,"English","ACM Int. Conf. Proc. Ser.",Conference Paper,"Final","",Scopus,2-s2.0-85066021598
"Ruhaiyem N.I.R., Mahalingam S., Syed-Mohamad S.M.","57190964192;57208385459;57189082262;","Intelligent mobile dictionary and thesaurus",2019,"Lecture Notes in Electrical Engineering","547",,,"513","519",,,"10.1007/978-981-13-6447-1_65","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064714418&doi=10.1007%2f978-981-13-6447-1_65&partnerID=40&md5=a18a44e9cb878572ae816ed71c5d1335","School of Computer Sciences, Universiti Sains Malaysia, Nibong Tebal, Malaysia","Ruhaiyem, N.I.R., School of Computer Sciences, Universiti Sains Malaysia, Nibong Tebal, Malaysia; Mahalingam, S., School of Computer Sciences, Universiti Sains Malaysia, Nibong Tebal, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Nibong Tebal, Malaysia","This project is a mobile dictionary application which takes advantage of camera with capability of Optical Character Recognition (OCR) to scan and extract words from the captured images then search offline dictionary database. The motivation that drives us toward this implementation is to contribute to any mobile users that prefer a dictionary application with OCR capabilities that is easy to use. The objectives of this project are to offer a mobile dictionary that provides OCR assistance to scan words from captured image and to allow users to search terms for synonym, nearest and antonym, and to connect with any dictionary databases. The results of this application are promising and show the potential for further model improvement. The target language for this application is English. © Springer Nature Singapore Pte Ltd. 2019.","Intelligent dictionary; Live scan; Optical character recognition","Optical character recognition; Robotics; Semantics; Live scan; Mobile dictionaries; Mobile users; Off-line dictionaries; Optical character recognition (OCR); Search terms; Target language; Computer vision",,,,,,,,"Mori, S., Nishida, H., Yamada, H., (1999) Optical Character Recognition, 1St Edn, , Wiley, New York, NY, USA; Nagy, G., Nartker, T.A., Rice, S.V., Optical character recognition: An illustrated guide to the frontier (1999) Proc. Doc. Recognit. Retr.Vii, SPIE, 3967, pp. 58-69; Seidi, M., Scholz, M., Huemer, C., Kappel, G., An Introduction to Object Oriented Modelling (2015) Vienna University of Technology; Craig, C., Gerber, A., (2015) Learn Android Studio: Build Android Apps Quickly and Effectively, , Apress; Sukri, S.S., Ruhaiyem, N.I.R., Mohamed, A.S.A., Face recognition with real time eye lid movement detection (2017) Advances in Visual Informatics. IVIC 2017. Lecture Notes in Computer Science, p. 10645. , Badioze Zaman, H., et al. (eds.), Springer, Cham","Ruhaiyem, N.I.R.; School of Computer Sciences, Malaysia; email: intanraihana@usm.my","Md Zawawi M.A.Teoh S.S.Abdullah N.B.Mohd Sazali M.I.S.",,"Springer Verlag","10th International Conference on Robotic, Vision, Signal Processing and Power Applications, ROVISP 2018","14 August 2018 through 15 August 2018",,225019,18761100,9789811364464,,,"English","Lect. Notes Electr. Eng.",Conference Paper,"Final","",Scopus,2-s2.0-85064714418
"Syed-Mohamad S.M., Haron N.H., McBride T.","57189082262;57189688281;8415398300;","Test adequacy assessment using test-defect coverage analytic model",2017,"Journal of Telecommunication, Electronic and Computer Engineering","9","3-5 Special Issue",,"191","196",,2,,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041747526&partnerID=40&md5=313d7a5dbdb2abb75a4977066accbbbc","School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia; Faculty of Information Technology, University of Technology, Sydney, 15 Broadway, Ultimo, NSW  2007, Malaysia","Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia; Haron, N.H., School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia; McBride, T., Faculty of Information Technology, University of Technology, Sydney, 15 Broadway, Ultimo, NSW  2007, Malaysia","Software testing is an essential activity in software development process that has been widely used as a means of achieving software reliability and quality. The emergence of incremental development in its various forms required a different approach to determining the readiness of the software for release. This approach needs to determine how reliable the software is likely to be based on planned tests, not defect growth and decline as typically shown in reliability growth models. A combination of information from a number of sources into an easily understood dashboard is expected to provide both qualitative and quantitative analyses of test and defect coverage properties. Hence, Test-Defect Coverage Analytic Model (TDCAM) is proposed which combines test and defect coverage information presented in a dashboard to help deciding whether there are enough tests planned. A case study has been conducted to demonstrate the usage of the proposed model. The visual representations and results gained from the case study show the benefits of TDCAM in assisting practitioners making informed test adequacy-related decisions.","Incremental Development; Iterative; Software Analytics; Software Testing.; —Defect Coverage",,,,,,"Universiti Sains Malaysia: 203/PKOMP/673140","This research is partly funded by the Short-Term Grant (304/PKOMP/6312090) of the Universiti Sains Malaysia and by Exploratory Research Grant Scheme (203/PKOMP/673140) from the Ministry of Education of Malaysia.",,"Yamada, S., Hishitasni, J., Osaki, S., Software-reliability growth with a Weibull test-effort: A model and application (1993) IEEE Transactions on Reliability, 42 (1), pp. 100-106; Wood, A., Software reliability growth models: Assumptions vs. Reality (1997) Proceedings of The Eighth International Symposium On Software Reliability Engineering, pp. 136-141. , in; Lyu, M.R., Software reliability engineering: A roadmap (2007) 2007 Future of Software Engineering IEEE Computer Society, pp. 153-170. , in; Syed-Mohamad, S.M., (2012) An Empirical Investigation of Software Reliability Indicators, , University of Technology, Sydney; Zhu, H., Hall, P.A.V., May, J.H.R., Software unit test coverage and adequacy (1997) ACM Computing Surveys, 29 (4), pp. 366-427; Frankl, P.G., Hamlet, R.G., Littlewood, B., Strigini, L., Evaluating testing methods by delivered reliability (1998) IEEE Trans. On Soft. Eng., 24 (8), pp. 586-601; Jihyun, L., Kang, S., Lee, D., Survey on software testing practices (2012) IET Soft, 6 (3), pp. 275-282; Graves, T.L., Karr, A.F., Marron, J.S., Siy, H., Predicting fault incidence using software change history (2000) IEEE Trans. on Soft. Eng., 26 (7), pp. 653-661; Fenton, N., Niclas, O., Quantitative analysis of faults and failures in a complex software system (2000) IEEE Trans on Soft. Eng., 26 (8), pp. 797-814; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Proceedings of The 27th IEEE International Conference on Software Engineering (ICSE 2005, pp. 284-292. , in ); Syed-Mohamad, S.M., McBride, T., Open source, agile and reliability measures (2009) Proceedings of The 12th International Conference on Quality Engineering in Software Technology (CONQUEST), pp. 103-118. , in Nuremberg, Germany: International Software Quality Institute; Mala, J.D., Mohan, V., Kamalapriya, M., Automated software test optimisation framework-an artificial bee colony optimisation-based approach (2010) IET Software, 4 (5), pp. 334-348; Inozemtseva, L., Holmes, R., Coverage is not strongly correlated with test suite effectiveness (2014) Proceedings of The 36th International Conference on Software Engineering, pp. 435-445. , in; Rahman, F., Posnett, D., Herraiz, I., Devanbu, P., Sample size vs. Bias in defect prediction (2013) Proceedings of The 2013 9th Joint Meeting on Foundations of Software Engineering, pp. 147-157. , in; Malaiya, Y.K., Li, M.N., Bieman, J.M., Software reliability growth with test coverage (2002) IEEE Transactions on Reliability, 51 (4), pp. 420-426; Mockus, A., Nagappan, N., Dinh-Trong, T.T., Test coverage and post-verification defects: A multiple case study (2009) Proceedings of The 3rd IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM 2009), pp. 291-301. , in; Cai, X., Lyu, M.R., The effect of code coverage on fault detection under different testing profiles (2005) Proceedings of The Workshop on Advances in Model-Based Software Testing (A-MOST), pp. 1-7. , in St. Louis, Missouri; Weyuker, E.J., An empirical study of the complexity of data flow testing (1988) Proceedings of The Second Workshop on Software Testing, Verification, and Analysis, pp. 188-195. , in; Khoshgoftaar, T.M., Munson, J.C., Predicting software development errors using software complexity metrics (1990) IEEE Journal on Selected Areas in Communications, 8 (2), pp. 253-261; Baysal, O., Holmes, R., Godfrey, M.W., Developer dashboards: The need for qualitative analytics (2013) IEEE Software, 30 (4), pp. 46-52; Halliday, S., Karin, B., Rossouw, V.S., A business approach to effective information technology risk analysis and management (1996) Information Management & Computer Security, 4 (1), pp. 19-31; Marian, J., Significance of different software metrics in defect prediction (2012) Software Engineering: An International Journal, 1 (1), pp. 86-95; Okutan, A., Yildiz, O.T., Software defect prediction using Bayesian networks (2014) Empirical Software Engineering, 19 (1), pp. 154-181",,,,"Universiti Teknikal Malaysia Melaka",,,,,21801843,,,,"English","J. Telecommun. Electron. Comput. Eng.",Conference Paper,"Final","",Scopus,2-s2.0-85041747526
"Ratana H., Mohamad S.M.S.","57200578421;57189082262;","Towards Model Checking of Network Applications for IoT System Development",2017,"Journal of Telecommunication, Electronic and Computer Engineering","9","3-4 Special Issue",,"143","149",,1,,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041715299&partnerID=40&md5=be1cfb92b628ac2e8891603efb80c836","School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia","Ratana, H., School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia; Mohamad, S.M.S., School of Computer Sciences, Universiti Sains Malaysia, Gelugor, Pulau Pinang, 11800, Malaysia","With the expansion of the Internet, Internet of Things (IoT) gains lots of interest from industries and academia. IoT applications enable human-to-device and device-to-device interactions. For a successful deployment of IoT systems and services, software reliability is a very important requirement for IoT to ensure that data/messages have been received and performed properly in a timely manner. The concurrent connections of embedded sensors and actuators are non-deterministic in nature which makes testing insufficient to guarantee program correctness. In contrast, model checking techniques explore the entire behavior of a system under test (SUT) in brute-force and systematic manner. It investigates each reachable state for different thread schedules. Recent model checking techniques have been applied directly to networked programs. This paper reviews model checking techniques for networked applications and presents their strengths and limitations. A preliminary proposal for model checking of networked applications that addresses the identified gap is presented.","Ache-Based Approach; Internet of Things Applications; Network Model Checking; Software Reliability",,,,,,,,,"Priestley, T., (2015) The Internet of Things Is A Fragmented $19 Trillion Roulette Gamble, , https://www.forbes.com/sites/theopriestley/2015/10/05/the-internet-of-things-is-a-fragmented-19-trillion-roulette-gamble/#6f7c579d29d9, Forbes, Accessed: 28-Feb-2017; Risteska Stojkoska, B.L., Trivodaliev, K.V., A review of Internet of Things for smart home: Challenges and solutions (2017) J. Clean. Prod., 140, pp. 1454-1464. , Jan; Lee, I., Lee, K., The Internet of Things (IoT): Applications, investments, and challenges for enterprises (2015) Bus. Horiz., 58 (4), pp. 431-440. , Jul; Baier, C., Katoen, J.-P., (2008) Principles of Model Checking, , The MIT Press, Cambridge; Clarke, E.M., Grumberg, O., Peled, D.A., (1999) Model Checking, , The MIT Press, Cambridge; Leungwattanakit, W., Artho, C., Hagiya, M., Tanabe, Y., Yamamoto, M., Takahashi, K., Modular software model checking for distributed systems (2014) IEEE Trans. Softw. Eng., 40 (5), pp. 483-501. , May; Shafiei, N., Mehlitz, P., Extending JPF to verify distributed systems (2014) ACM SIGSOFT Softw. Eng. Notes, 39 (1), pp. 1-5. , Feb; Sebih, N., Weitl, F., Artho, C., Hagiya, M., Tanabe, Y., Yamamoto, M., Software model checking of udp-based distributed applications (2014) 2014 Second International Symposium on Computing and Networking, pp. 96-105. , in; Clarke, E.M., The birth of model checking (2008) Lecture Notes in Computer Science (Including Subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), 5000, pp. 1-26. , in LNCS; Godefroid, P., Model checking for programming languages using verisoft (1997) Proceedings of The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 174-186. , in; Corbett, J.C., Bandera: Extracting finite-state models from Java source code (2000) Proceedings of The 22Nd International Conference on Software Engineering, pp. 439-448. , in; Ball, T., Podelski, A., Rajamani, S.K., Boolean and cartesian abstraction for model checking C programs (2001) Tools and Algorithms for The Construction and Analysis of Systems, pp. 268-283. , in T. Margaria, and W. Yi, Eds. Berlin, Heidelberg: Springer; Ball, T., Rajamani, S.K., The SLAM toolkit (2001) Computer Aided Verification, pp. 260-264. , in G. Berry, H. Comon, and A. Finkel, Eds. Berlin, Heidelberg: Springer; Visser, W., Havelund, K., Brat, G., Park, S., Lerda, F., Model checking programs (2003) Autom. Softw. Eng., 10 (2), pp. 203-232; Chaki, S., Clarke, E., Groce, A., Jha, S., Veith, H., Modular Verification of software components in C (2003) Proceedings of The 25th International Conference on Software Engineering, pp. 385-395. , in; Henzinger, T.A., Jhala, R., Majumdar, R., Sutre, G., Software verification with BLAST (2003) Model Checking Software, pp. 235-239. , in T. Ball and S. K. Rajamani, Eds. Berlin, Heidelberg: Springer; Artho, C., Artho, C., Biere, A., Eugster, P., Baur, M., Zweimüller, B., JNuke: Efficient dynamic analysis for Java (2004) Proc. CAV ’04, pp. 462-465. , in; Dwyer, M.B., Hatcliff, J., Hoosier, M., Robby, Building your own software model checker using the bogor extensible model checking framework (2005) Computer Aided Verification, pp. 148-152. , in K. Etessami and S. K. Rajamani, Eds. Berlin, Heidelberg: Springer; Artho, C., Zweimüller, B., Biere, A., Shibayama, E., Honiden, S., Efficient model checking of applications with input/output (2007) Computer Aided Systems Theory, pp. 515-522. , in R. Moreno-D’iaz, F. Pichler, and A. Quesada-Arencibia, Eds. Berlin, Heidelberg: Springer; Artho, C., Leungwattanakit, W., Hagiya, M., Tanabe, Y., Efficient model checking of networked applications (2008) 46th International Conference Objects, Components, Models and Patterns Proceedings, 11, pp. 22-40. , in; Artho, C., Leungwattanakit, W., Hagiya, M., Tanabe, Y., Yamamoto, M., Cache-based model checking of networked applications: From linear to branching time (2009) 24th {IEEE/ACM} International Conference on Automated Software Engineering, pp. 447-458. , in Auckland, New Zealand; Leungwattanakit, W., Artho, C., Hagiya, M., Tanabe, Y., Yamamoto, M., Model checking distributed systems by combining caching and process checkpointing (2011) 2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011), pp. 103-112. , in; Stoller, S.D., Liu, Y.A., Transformations for model checking distributed Java programs (2001) SPIN’01: Proceedings of The 8th International SPIN Workshop on Model Checking of Software, , in; Artho, C., Garoche, P.-L., Accurate centralization for applying model checking on networked applications (2006) 21st IEEE/ACM International Conference on Automated Software Engineering (ASE’06), pp. 177-188. , in; Barlas, E., Bultan, T., Netstub: A framework for verification of distributed Java applications (2007) Proceedings of The Twenty-Second IEEE/ACM International Conference on Automated Software Engineering, pp. 24-33. , in; Nakagawa, Y., Potter, R., Yamamoto, M., Hagiya, M., Kato, K., Model checking of multi-process applications using SBUML and GDB (2005) Proc. Workshop on Dependable Software: Tools and Methods, pp. 215-220. , in; Ma, L., Artho, C., Sato, H., Analyzing distributed Java applications by automatic centralization (2013) 2013 IEEE 37th Annual Computer Software and Applications Conference Workshops, pp. 691-696. , in; Ansel, J., Arya, K., Cooperman, G., DMTCP: Transparent checkpointing for cluster computations and the desktop (2009) 2009 IEEE International Symposium on Parallel & Distributed Processing, pp. 1-12. , in",,,,"Universiti Teknikal Malaysia Melaka",,,,,21801843,,,,"English","J. Telecommun. Electron. Comput. Eng.",Article,"Final","",Scopus,2-s2.0-85041715299
"Mubarak-Ali A.-F., Sulaiman S., Syed-Mohamad S.M., Xing Z.","56644638000;57226227606;57189082262;8347413500;","Code clone detection and analysis in open source applications",2017,"Computer Systems and Software Engineering: Concepts, Methodologies, Tools, and Applications",,,,"1112","1127",,5,"10.4018/978-1-5225-3923-0.ch044","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041574881&doi=10.4018%2f978-1-5225-3923-0.ch044&partnerID=40&md5=609dbabdd47fbcf5f79e5af8ac0081a1","Universiti Teknologi Malaysia, Malaysia; Nanyang Technological University, Singapore","Mubarak-Ali, A.-F., Universiti Teknologi Malaysia, Malaysia; Sulaiman, S., Universiti Teknologi Malaysia, Malaysia; Syed-Mohamad, S.M., Universiti Teknologi Malaysia, Malaysia; Xing, Z., Nanyang Technological University, Singapore","Code clone is a portion of codes that contains some similarities in the same software regardless of changes made to the specific code such as removal of white spaces and comments, changes in code syntactic, and addition or removal of code. Over the years, many approaches and tools for code clone detection have been proposed. Most of these approaches and tools have managed to detect and analyze code clones that occur in large software. In this chapter, the authors aim to provide a comparative study on current state-of-the-art in code clone detection approaches and models together with their corresponding tools. They then perform an empirical evaluation on the selected code clone detection tool and organize the large amount of information in a more systematic way. The authors begin with explaining background concepts of code clone terminology. A comparison is done to find out strengths and weaknesses of existing approaches, models, and tools. Based on the comparison done, they then select a tool to be evaluated in two dimensions, which are the amount of detected clones and run time performance of the tool. The result of the study shows that there are various terminologies used for code clone. In addition, the empirical evaluation implies that the selected tool (enhanced generic pipeline model) gives a better code clone output and runtime performance as compared to its generic counterpart. © 2018 by IGI Global. All rights reserved.",,"Cloning; Codes (symbols); Open source software; Terminology; Code clone detection; Comparative studies; Empirical evaluations; Generic pipeline models; Open source application; Run-time performance; State of the art; Two-dimension; Open systems",,,,,,,,"ANTLR Parser Generator (2005) ANTLR V3, , http://www.antlr.org/files/100/www.antlr.org.html, January 30, 2012; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and evaluation of clone detection tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591; Biegel, B., Diehl, S., (2010) Highly Configurable and Extensible Code Clone Detection, , Paper presented at the 17th Working Conference on Reverse Engineering (WCRE). Beverly, MA; Biegel, B., Diehl, S., (2010) JCCD: A Flexible and Extensible API for Implementing Custom Code Clone Detectors, , Paper presented at the IEEE/ACM International Conference on Automated Software Engineering (ASE ‘10). Antwerp, Belgium; Deissenboeck, F., Hummel, B., Juergens, E., Pfaehler, M., Schaetz, B., (2010) Model Clone Detection in Practice, , Paper presented at the 4th International Workshop on Software Clones (IWSC ‘10). Cape Town, South Africa; Duala-Ekoko, E., Robillard, M.P., Tracking code clones in evolving software (2007) Proceedings of the 29Th International Conference on Software Engineering (ICSE ‘07), , Minneapolis, MN: ICSE; Gang, Z., Xin, P., Zhenchang, X., Wenyun, Z., (2012) Cloning Practices: Why Developers Clone and What Can Be Changed, , Paper presented at the 28th IEEE International Conference on Software Maintenance (ICSM). Trento, Italy; Giesecke, S., (2007) Generic Modeling of Code Clones. Dagstuhl, , Germany: Internationales Begegnungs und Forschungszentrum Informatik (IBFI); Hou, D., Jacob, F., Jablonski, P., (2009) Proactively Managing Copy-And-Paste Induced Code Clones, , Paper presented at the IEEE International Conference on Software Maintenance (ICSM 2009). Edmonton, Canada; Jarzabek, S., Xue, Y., (2010) Are Clones Harmful for Maintenance? Paper Presented at the 4Th International Workshop on Software Clones (IWSC ‘10), , Cape Town, South Africa; (2012) Jhotdraw 7, , http://www.randelshofer.ch/oop/jhotdraw/files/120/jhotdraw.html; Jiang, L., Misherghi, G., Su, Z., Glondu, S., (2007) DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones, , Paper presented at the 29th international conference on Software Engineering (ICSE ‘07). Minneapolis, MN; Juergens, E., (2011) Research in Cloning beyond Code: A First Roadmap. Paper Presented at the 5Th International Workshop on Software Clones (IWSC ‘11), , Waikiki, HI; Kamiya, T., Kusumoto, S., Inoue, K., CCFinder: A multilinguistic token-based code clone detection system for large scale source code (2002) IEEE Transactions on Software Engineering, 28 (7), pp. 654-670; Kapser, C.J., Godfrey, M.W., Supporting the analysis of clones in software systems (2006) Journal of Software Maintenance and Evolution: Research and Practice, 18 (2), pp. 61-82; Kapser, C.J., Godfrey, M.W., Cloning considered harmful considered harmful: Patterns of cloning in software (2008) Empirical Software Engineering, 13 (6), pp. 645-692; Kawaguchi, S., Yamashina, T., Uwano, H., Fushida, K., Kamei, Y., Nagura, M., Iida, H., (2009) SHINOBI: A Tool for Automatic Code Clone Detection in the IDE, , Paper presented at the 16th Working Conference on Reverse Engineering, 2009. New York, NY; Koschke, R., Baxter, I.D., Michael Conradt, M., Cordy, J.R., (2012) Software Clone Management Towards Industrial Application, , Dagstuhl, Germany: Academic Press; Koschke, R., Falke, R., Frenzel, P., (2006) Clone Detection Using Abstract Syntax Suffix Trees, , Paper presented at the 13th Working Conference on Reverse Engineering (WCRE ‘06). Benevento; Mubarak-Ali, A.-F., Syed-Mohamed, S.M., Sulaiman, S., (2011) An Enhanced Generic Pipeline Model for Code Clone Detection, , Paper presented at the 5th Malaysian Software Engineering Conference (MySEC). Kuala Lumpur, Malaysia; Roy, C.K., Cordy, J.R., A Survey on Software Clone Detection Research. School of Computing TR 2007-541 (2007) Queen’s University, p. 115; (2009) Sablecc. Sablecc, , http://sablecc.org/, Jan 30, 2012; Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., Code clone analysis environment for supporting software development and maintenance (2006) Electronics and Communications in Japan (Part III Fundamental Electronic Science), 89 (11), pp. 10-18; Banks, R., (2011) Clone Detective for Visual Studio 2008: Richard Banks - Agile And.Net, , http://www.richard-banks.org/2008/08/clone-detective-for-visual-studio-2008.html, June 5, 2011; Baxter, I.D., Yahin, A., Moura, L., Sant’Anna, M., Bier, L., (1998) Clone Detection Using Abstract Syntax Trees. The International Conference on Software Maintenance, , Bethesda, MD; Calefato, F., Lanubile, F., Mallardo, T., Function clone detection in web applications: A semiautomated approach (2004) Journal of Web Engineering, 3, pp. 3-21; Dang, Y., Ge, S., Huang, R., Zhang, D., (2011) Code Clone Detection Experience at Microsoft, , The 5th International Workshop on Software Clones (IWSC ‘11), Waikiki, Honolulu, USA; Deissenboeck, F., Hummel, B., Juergens, E., Schatz, B., Wagner, S., Girard, J.F., Teuchert, S., (2008) Clone Detection in Automotive Model-Based Development, , The 30th International Conference on Software Engineering (ICSE ‘08), Leipzig, Germany; Di Lucca, G.A., Di Penta, M., Fasolino, A.R., (2002) An Approach to Identify Duplicated Web Pages, , The 26th International Computer Software and Applications Conference (COMPSAC 2002), Oxford, England; Engelbertink, F., Vogt, H., (2010) How to save on Software Maintenance Costs, pp. 1-12. , OMNEXT; Frey, T., Koppen, V., (2012) Hypermodelling Live OLAP for Code Clone Recommendation, , The Tenth International Baltic Conference on Databases and Information Systems; Girschick, M., Difference detection and visualization in UML class diagrams (2006) Technical University of Darmstadt Technical Report TUD-CS-2006-5; Nils, G., Koschke, R., (2009) Incremental Clone Detection, , The 13th European Conference on Software Maintenance and Reengineering (CSMR ‘09), Kaiserslautern, Germany; Higo, Y., Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., (2002) On Software Maintenance Process Improvement Based on Code Clone Analysis, , The 4th International Conference on Product Focused Software Process Improvement (PROFES ‘02), Rovaniemi, Finland; Hou, D., Jacob, F., Jablonski, P., (2009) Exploring the Design Space of Proactive Tool Support for Copy-And-Paste Programming, , The 2009 conference of the Centre for Advanced Studies on Collaborative Research (CASCON ‘09), Toronto, Ontario, Canada; Hummel, B., Juergens, E., Heinemann, L., Conradt, M., (2010) Index-Based Code Clone Detection: Incremental, Distributed, Scalable, , The IEEE International Conference on Software Maintenance (ICSM 2010), Timisoara; Jiang, Z.M., (2006) Visualizing and Understanding Code Duplication in Large Software Systems. (Master of Mathematics in Computer Science), University of Waterloo, , Waterloo, Ontario, Canada: Available from Google Scholar; Johnson, J.H., (1993) Identifying Redundancy in Source Code Using Fingerprints, , The Conference of the Centre for Advanced Studies on Collaborative research: software engineering (CASCON ‘93), Toronto, Ontario, Canada; Kontogiannis, K.A., Demori, R., Merlo, E., Galler, M., Bernstein, M., Pattern matching for clone and concept detection (1996) Automated Software Engineering, 3 (1), pp. 77-108; Krinke, J., (2001) Identifying Similar Code with Program Dependence Graphs, , The 8th Working Conference on Reverse Engineering (WCRE’01), Suttgart, Germany; Krinke, J., Gold, N., Jia, Y., Binkley, D., (2010) Cloning and Copying between Gnome Projects, , The 7th IEEE Working Conference on Mining Software Repositories (MSR), Cape Town; Lague, B., Proulx, D., Mayrand, J., Merlo, E.M., Hudepohl, J., (1997) Assessing the Benefits of Incorporating Function Clone Detection in a Development Process, , The International Conference on Software Maintenance, Bari, Italy; Leitao, A.M., Detection of redundant code using R 2 D 2 (2004) Software Quality Journal, 12 (4), pp. 361-382; Liu, H., Ma, Z., Shao, W., (2006) Detecting Duplications in Sequence Diagrams Based on Suffix Tree, , The 13th Asia Pacific Software Engineering Conference (APSEC 2006), Kanpur, India; Livieri, S., Higo, Y., Matsushita, M., (2007) Analysis of the Linux Kernel Evolution Using Code Clone Coverage, , The Proceedings of the Fourth International Workshop on Mining Software Repositories (MSR ‘07), Minneapolis, USA; Monden, A., Nakae, D., Kamiya, T., Sato, S., Matsumoto, K., (2002) Software Quality Analysis by Code Clones in Industrial Legacy Software, , The 8th IEEE Symposium on Software Metrics, Ottawa, Canada; Pham, N.H., Nguyen, H.A., Nguyen, T.T., Al-Kofahi, J.M., Nguyen, T.N., (2009) Complete and Accurate Clone Detection in Graph-Based Models, , The IEEE 31st International Conference on Software Engineering (ICSE 2009) Vancouver, BC; Rahman, F., Bird, C., Devanbu, P., Clones: What is that smell? (2012) Empirical Software Engineering, 17 (4-5), pp. 503-530; Roy, C.K., Cordy, J.R., (2008) Scenario-Based Comparison of Clone Detection Techniques, , Paper presented at the The 16th IEEE International Conference on Program Comprehension (ICPC 2008), Amsterdam; Storrle, H., (2010) Towards Clone Detection in UML Domain Models, , The Fourth European Conference on Software Architecture: Companion Volume (ECSA ‘10), Copenhagen, Denmark; Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., (2002) Gemini: Maintenance Support Environment Based on Code Clone Analysis, , The 8th IEEE Symposium on Software Metrics, Ottawa, Canada; Van Rysselberghe, F., Demeyer, S., (2003) Reconstruction of Successful Software Evolution Using Clone Detection, , The 6th International Workshop on Principles of Software Evolution, Helsinki, Finland; Wahler, V., Seipel, D., Wolff, J., Fischer, G., (2004) Clone Detection in Source Code by Frequent Itemset Techniques, , The 4th IEEE International Workshop Source Code Analysis and Manipulation, Chicago, IL",,,,"IGI Global",,,,,,9781522539247; 9781522539230,,,"English","Computer Systems and softw. Engineering: Concepts, Methodologies, Tools, and Applications",Book Chapter,"Final","",Scopus,2-s2.0-85041574881
"Haron N.H., Syed-Mohamad S.M.","57189688281;57189082262;","Test and Defect Coverage Analytics Model for the assessment of software test adequacy",2016,"2015 9th Malaysian Software Engineering Conference, MySEC 2015",,, 7475188,"13","18",,2,"10.1109/MySEC.2015.7475188","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974577144&doi=10.1109%2fMySEC.2015.7475188&partnerID=40&md5=3a999a8a1db1e35d0c55cf8a108f50f3","School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia","Haron, N.H., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800, Malaysia","Software testing is an essential activity in software development process that has been widely used as a means of achieving software reliability and quality. Software practitioners rely on test coverage to decide whether software under test has achieved an acceptable level of reliability and can be released. The researchers in the field of software testing focus on defining meaningful test coverage as measures which are fre-quently used interchangeably with the notion of test adequacy criteria. Test and defect-based information are among widely used adequacy criteria in the literature. However, little work has been conducted into integrating the two important indicators from the analytics perspective. Therefore, in this paper, Test and Defect Coverage Analytics Model (TDCAM) is proposed. TDCAM provides an analytical view for practitioners to assess and validate the testing results. A case study has been conducted to reveal the practical implications of the proposed model. One of the findings shows that components with low branch coverage percentage tend to have more number of defects detected, in which supports previous work. © 2015 IEEE.","defect coverage; software analytics; software testing; test adequacy criteria; test coverage","Defects; Software design; Software engineering; Software reliability; Testing; Branch coverage; Defect coverage; Software development process; Software practitioners; Test adequacy criteria; Test coverage; Software testing",,,,,,,,"Audris, M., Test coverage and post-verification defects: A multiple case study (2009) Empirical Software Engineering and Measurement 2009. ESEM 2009. 3rd International Symposium on, , IEEE; Cai, X., Lyu, M.R., The effect of code coverage on fault detection under different testing profiles (2005) ICSE 2005 Workshop on Advances in Model-Based Software Testing (A-MOST), , st. Louis, Missouri, May 2005; Malaiya, Y.K., Software reliability growth with test coverage (2002) Reliability IEEE Transactions on, 51 (4), pp. 420-426. , 2002, 2002; Menzies, T., Zimmermann, T., Software analytics: So what? (2013) Software IEEE, 30 (4), pp. 31-37. , 2013; Jacek, C., Codemine:Building a software development data analytics platform at Microsoft (2013) IEEE Software, 30 (4), p. 64. , 2013; Buse, R.P.L., Zimmermann, T., Information needs for software development analytics (2012) Proc. Int'! Conf. Software Eng. (ICSE 12), IEEE, 2012, pp. 987-996; Zhu, H., Software unit test coverage and adequacy (1997) ACM Comput. Surv., 29 (4), pp. 366-427; Gong, Y.Z., On software's defects (2003) Journal of Academy of Armored for Engineering, 17 (1), pp. 60-63. , 2013; Graves, T.L., Predicting fault incidence using software change history (2000) IEEE Trans. Software Eng., 26 (7), pp. 653-661. , 2000, 2000; Fenton, N.E., Ohlsson, N., Quantitative analysis of faults and failures in a complex software system (2000) Software Engineering IEEE Transactions on, 26 (8), pp. 797-814. , 2000, 2000; Dalal, S.R., Horgan, J.R., Kettenring, J.R., Reliable software and communication: Software quality, reliability, and safety (1993) Software Engineering 1993. Proceedings., 15th International Conference on, 1993. , IEEE; Olga, B., Holmes, R., Godfrey, M.W., Developer dashboards: The need for qualitative analytics (2013) Software IEEE, 30 (4), pp. 46-52. , 2013, 2013; Halliday, S., Badenhorst, K., Yon Solms, R., A business approach to effective information technology risk analysis and management (1996) Information Management & Computer Security, 4 (1), pp. 19-31. , 1996, 1996",,"Hassan S.A.Ab. Rahman W.N.Atan R.Pa N.C.Mohd. Ali N.","","Institute of Electrical and Electronics Engineers Inc.","9th Malaysian Software Engineering Conference, MySEC 2015","16 December 2015 through 17 December 2015",,121755,,9781467382267,,,"English","Malays. Softw. Eng. Conf., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84974577144
"Kadar R., Syed-Mohamad S.M., Abdul Rashid N.","36608374200;57189082262;7003757702;","Semantic-based extraction approach for generating source code summary towards program comprehension",2016,"2015 9th Malaysian Software Engineering Conference, MySEC 2015",,, 7475208,"129","134",,2,"10.1109/MySEC.2015.7475208","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974575319&doi=10.1109%2fMySEC.2015.7475208&partnerID=40&md5=eba1bc9d25337b5ec11eb06973018bd7","School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia; Faculty of Computer and Mathematical Sciences, Universiti Teknologi MARA Pulau Pinang, Penang, Malaysia","Kadar, R., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia, Faculty of Computer and Mathematical Sciences, Universiti Teknologi MARA Pulau Pinang, Penang, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia; Abdul Rashid, N., School of Computer Sciences, Universiti Sains Malaysia, Penang, Malaysia","Program comprehension is a vital process that involves much effort in software maintenance. A key challenge for the developers is to comprehend a software system to be maintained since it is difficult and time consuming. Nowadays, software systems have grown in size causing the increased of developers' tasks in exploring and understanding source code. Source code is a crucial resource for developers to become familiar with a software system since some system documentation is often unavailable or outdated. Although many researchers have discussed different strategies and techniques to overcome the program comprehension problem, there are still many challenges that they have not yet discovered when trying to understand a software system through reading source code. Therefore, this study attempts to overcome the problem of source code comprehension by suggesting a suitable comprehension technique. We propose a semantic-based extraction approach of source code and generating it as a summary. This work aims to explain the concepts and relationships of program by integrating utilization of ontology and UML class-based modeling approaches. It will be easier for maintainer to understand source code as well as create a better way for improving program comprehension. © 2015 IEEE.","graphical representation; information extraction; program comprehension; semantic relationship; visualization","Computer programming; Computer programming languages; Computer software; Flow visualization; Information retrieval; Semantics; Software engineering; Class-based; Graphical representations; Model approach; Program comprehension; Semantic relationships; Software systems; Source code comprehensions; Source codes; Codes (symbols)",,,,,"Ministry of Higher Education, Malaysia, MOHE: 203/PKOMP/673140","The author gratefully acknowledges the Ministry of Education (MOE) Malaysia, as part of the first author's PhD studies scholarship. The authors also recognize the funding support for the conference provided by the Exploratory Research Grant Scheme (203/PKOMP/673140) of the Ministry of Education of Malaysia.",,"Tiarks, R., Rohm, T., Challenges in program comprehension (2013) Softwaretechnik-Trends, 32 (2), pp. 19-20. , May; Carvalho, N.R., An ontology toolkit for problem domain concept location in program comprehension (2013) 2013 35th Int, Corif. Softw, Eng, pp. 1415-1418. , May; Yazdanshenas, A.R., Moonen, L., Tracking and visualizing information flow in component-based systems (2012) 2012 20th IEEE Int, Corif. Progr, Compr"", pp. 143-152. , Jun; Cornelissen, B., Zaidman, A., Society, I.C., (2011) A Controlled Experiment for Program Comprehension Through Trace Visualization, 37 (3), pp. 341-355; Roehm, T., Tiarks, R., Koschke, R., Maalej, W., How do professional developers comprehend software? (2012) 2012 34th Int, Corif. Softw. Eng, pp. 255-265. , Jun; Ying, A.T.T., Robillard, M.P., The influence of the task on programmer behaviour (2011) 2011 IEEE 19th Int, Corif. Progr, Compr"", pp. 31-40. , Jun; Jali, N., Greer, D., Hanna, P., (2014) Class Responsibility Assignment (CRA) for Use Case Specification to Sequence Diagrams (UC2SD), pp. 2-7; Thakur, J.S., Gupta, A., Automatic generation of sequence diagram from use case specification (2014) Proc, 7th India Softw. Eng. Corif.-ISEC '14, pp. 1-6; Kothari, P.R., (2012) Processing Natural Language Requirement to Extract Basic Elements Ofa Class, 3 (7), pp. 39-42; Shinde, S.K., (2012) NLP Based Object Oriented Analysis and Design from Requirement Specification, 47 (21), pp. 30-34; Bhagat, S.B., Kapadni, P.R., Kapadnis, N., Patil, D.S., Baheti, M.I., (2012) Class Diagram Extraction Using NLP, pp. 1-4; Ibrahim, M., Ahmad, R., Class diagram extraction from textual requirements using natural language processing (NLP) techniques (2010) 2010 Second Int, Corif. Comput. Res, Dev, pp. 200-204; Bartoszuk, C., Timoszuk, G., Robert, D., (2013) Magnify - A New Tool for Software Visualization, pp. 1485-1488; Ishio, T., Etsuda, S., Inoue, K., A lightweight visualization of interprocedural data-flow paths for source code reading (2012) 2012 20th IEEE Int, Corif. Progr, Compr, pp. 37-46. , Jun; Chen, F., Zhou, H., Yang, H., Ward, M., Chu, W.C.-C., Requirements recovery by matching domain ontology and program ontology (2011) 2011 IEEE 35th Annu, Comput, Softw, Appl. Corif, pp. 602-607. , Jul; Murphy, C.R.G., Bradley, A.W.I., Generating natural language summaries for crosscutting source code concerns (2011) Software Maintenance (ICSM) 2011 27th IEEE International Conference on, pp. 103-112; Abebe, S.L., Tonella, P., Natural language parsing of program element names for concept extraction (2010) Program Comprehension (ICPC) 2010 IEEE 18th International Conference on, pp. 156-159; Yazdanshenas, A.R., Moonen, L., Crossing the boundaries while analyzing heterogeneous component-based software systems (2011) Software Maintenance (ICSM) 2011 27th IEEE International Conference on, pp. 193-202; Krinke, J., Visualization of program dependence and slices (2004) 20th IEEE Int. Corif. Softw, Maintenance 2004. Proceedings, pp. 168-177; Wilson, L., Using ontology fragments in concept location (2010) Software Maintenance (ICSM) 2010 IEEE International Conference on, pp. 1-2; Haiduc, S., Aponte, J., Marcus, A., Supporting program comprehension with source code summarization (2010) Software Engineering 2010 ACMIIEEE 32nd International Conference on, 2, pp. 223-226; McBurney, P.W., McMillan, C., Automatic documentation generation via source code summarization of method context (2014) Proceedings of the 22nd International Conference on Program Comprehension, pp. 279-290; Dennis, A., Wixom, B.H., Tegarden, D., (2015) Systems Analysis and Design: An Object-oriented Approach with UML, , John Wiley & Sons; Alnusair, A., Zhao, T., Using semantic inference for software understanding and design recovery (2010) Information Technology: New Generations (ITNG) 2010 Seventh International Conference on, pp. 980-985; Cadenhead, R., Lemay, L., (2002) Sams Teach Yourself Java 2 in 21 Days, , Sams Publishing; Vermeulen, A., (2000) The Elements of Java (TM) Style, 15. , Cambridge University Press",,"Hassan S.A.Ab. Rahman W.N.Atan R.Pa N.C.Mohd. Ali N.","","Institute of Electrical and Electronics Engineers Inc.","9th Malaysian Software Engineering Conference, MySEC 2015","16 December 2015 through 17 December 2015",,121755,,9781467382267,,,"English","Malays. Softw. Eng. Conf., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84974575319
"Yusri N., Syed-Mohamad S.M., Rashid N.A.","56830521400;57189082262;7003757702;","Recoop: A collaborative tool to support teaching and learning programming",2015,"ICIC Express Letters","9","10",,"2703","2710",,1,,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941273526&partnerID=40&md5=d7d2156eb2a361302cfb5a3489db4b44","School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800 USM, Malaysia","Yusri, N., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800 USM, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800 USM, Malaysia; Rashid, N.A., School of Computer Sciences, Universiti Sains Malaysia, Penang, 11800 USM, Malaysia","Many studies suggest that learning programming requires collaborative engagement and should be supported by suitable programming platforms. Motivated by studies in collaborative learning, this paper presents a platform for teaching and learning programming collaboratively, called ReCOOP. ReCOOP offers a learning environment that is equipped with social and communication supports that allows users’ interactions in different approaches, such as texts and verbal. ReCOOP is implemented as an Eclipse plug-in. A group of undergraduate students participated in an experiment conducted to measure its effectiveness. It is found that learning programming using ReCOOP benefits the students by creating an environment that allows them learning by seeing samples, learning by being guided and learning by being programmed. It also benefits tutors in terms of identifying students’ weaknesses in programming. © 2015, ICIC International.","Collaborative and social supports; Eclipse; Pair programming; Teaching and learning programming","Education; Students; Teaching; Collaborative learning; Communication support; Eclipse; Learning environments; Pair-programming; Social support; Teaching and learning; Undergraduate students; Computer aided instruction",,,,,"304/PKOMP/6312090",,,"Bravo, C., Marcelino, M.J., Gomes, A.J., Esteves, M., Mendes, A.J., Integrating educational tools for collaborative computer programming learning (2005) Journal of Universal Computer Science, 11, pp. 1505-1517; Jenkins, T., On the difficulty of learning to program (2002) The 3Rd Annual Conference of LTSN-ICS; Beaubouef, T., Mason, J., Why the high attrition rate for computer science students: Some thoughts and observations (2005) SIGCSE Bull, 37, pp. 103-106; Vizcaíno, A., Prieto, M., Examining the effectiveness of new technology in high school, Proc. Of the International (2000) Symposium of Technologies of Information and Communication in Engineering and Industry; Soller, A.L., Supporting social interaction in an intelligent collaborative learning system (2001) International Journal of Artificial Intelligence in Education, 12, pp. 40-62; Vizcaíno, A., Contreras, J., Favela, J., Prieto, M., An adaptive, collaborative environment to develop good habits in programming Intelligent Tutoring Systems, G. Gauthier, C. Frasson and K, p. 2000. , VanLehn (eds.), Springer Berlin Heidelberg; Gokhale, A.A., Collaborative learning enhances critical thinking (1995) Journal of Technology Education, 7, 83p; Gomez-Albarran, M., The teaching and learning of programming: A survey of supporting software tools (2005) The Computer Journal, 48, pp. 130-140; Guzdial, M., Hmelo, C., Hübscher, R., Nagel, K., Newstetter, W., Puntambekar, S., Shabo, A., Kolodner, J.L., Integrating and guiding collaboration: Lessons learned in computersupported collaborative learning research at Georgia Tech, Proc. of the 2nd (1997) International Conference on Computer Support for Collaborative Learning, , Toronto, Ontario, Canada; Li, C., Dong, Z., Untch, R.H., Jagadeesh, D., Developing an interactive practice tool in PeerSpace for first year computer science students (2013) International Journal of Information and Education Technology, 3, pp. 48-53; Brusilovsky, P., Weber, G., Collaborative example selection in an intelligent example-based programming environment, Proc. Of the (1996) International Conference on Learning Sciences, p. 1996. , Evanston, Illinois; Weber, G., Brusilovsky, P., ELM-ART: An adaptive versatile system for web-based instruction (2001) International Journal of Artificial Intelligence in Education, 12, pp. 351-384; Boyer, K.E., Dwight, A.A., Fondren, R.T., Vouk, M.A., Lester, J.C., (2008) A Development Environment for Distributed Synchronous Collaborative Programming, Proc. of the 13Th Annual Conference on Innovation and Technology in Computer Science Education, , Madrid, Spain; Salinger, S., Oezbek, C., Beecher, K., Schenk, J., (2010) Saros: An Eclipse Plug-In for Distributed Party Programming, , Proc. of the 2010 ICSE Workshop on Cooperative and Human Aspects of Software Engineering, Cape Town, South Africa; Syed-Mohamad, S.M., Yusri, N., Rashid, N.A., Malim, N., (2013) Recoop: An Eclipse Plug-In for Collaborative Programming Learning, pp. 7043-7051. , The 6th International Conference of Education, Research & Innovation, Seville, Spain; Yusri, N., Zulika, A., Syed-Mohamad, S.M., Rashid, N.A., (2014) Tools for Teaching and Learning Programming: A Review and Proposed Tool, the 13Th International Conferences on Intelligent Software Methodologies, Tools, and Techniques, , Langkawi, Malaysia; Deitel, H.M., Deitel, P.J., Java How to Program, 9th Edition (2012) Prentice Hall PTR; Hadjerrouit, S., Java as first programming language: A critical evaluation (1998) SIGCSE Bull, 30, pp. 43-47",,,,"ICIC Express Letters Office",,,,,1881803X,,,,"English","ICIC Express Lett.",Article,"Final","",Scopus,2-s2.0-84941273526
"Mubarak-Ali A.-F., Syed-Mohamad S., Sulaiman S.","56644638000;57189082262;25825568100;","Enhancing generic pipeline model for code clone detection using divide and conquer approach",2015,"International Arab Journal of Information Technology","12","5",,"510","517",,2,,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940974173&partnerID=40&md5=b9dceeeb8ee6264af028b2175dd274d2","School of Computer Sciences, University Sains Malaysia, Malaysia; University Technology Malaysia, Malaysia","Mubarak-Ali, A.-F., School of Computer Sciences, University Sains Malaysia, Malaysia; Syed-Mohamad, S., School of Computer Sciences, University Sains Malaysia, Malaysia; Sulaiman, S., University Technology Malaysia, Malaysia","Code clone is known as identical copies of the same instances or fragments of source codes in software. Current code clone research focuses on the detection and analysis of code clones in order to help software developers identify code clones in source codes and reuse the source codes in order to decrease the maintenance cost. Many approaches such as textual based comparison approach, token based comparison and tree based comparison approach have been used to detect code clones. As software grows and becomes a legacy system, the complexity of these approaches in detecting code clones increases. Thus, this scenario makes it more difficult to detect code clones. Generic pipeline model is the most recent code clone detection that comprises five processes which are parsing process, pre-processing process, pooling process, comparing processes and filtering process to detect code clone. This research highlights the enhancement of the generic pipeline model using divide and conquer approach that involves concatenation process. The aim of this approach is to produce a better input for the generic pipeline model by processing smaller part of source code files before focusing on the large chunk of source codes in a single pipeline. We implement and apply the proposed approach with the support of a tool called Java Code Clone Detector (JCCD). The result obtained shows an improvement in the rate of code clone detection and overall runtime performance as compared to the existing generic pipeline model. © 2015, Zarka Private Univ. All rights reserved","Code clone detection; Divide and conquer approach; Generic pipeline model",,,,,,,,,"(2012), http://www.antlr.org/, ANTLR Parser Generator; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and Evaluation of Clone Detection Tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591; Biegel, B., Diehl, S., Highly Configurable and Extensible Code Clone Detection (2010) Proceedings of the 17Th Working Conference on Reverse Engineering, pp. 237-241. , Massachusetts, USA; Biegel, B., Diehl, S., JCCD: A Flexible and Extensible API for Implementing Custom Code Clone Detectors (2010) Proceedings of IEEE/ACM International Conference on Automated Software Engineering, pp. 167-168. , Antwerp, Belgium; Dasgupta, S., Papadimitriou, C., Vazirani, U., (2006) Algorithms, , McGraw Hill, New York, USA; Deissenboeck, F., Hummel, B., Juergens, E., Pfaehler, M., Schaetz, B., Model Clone Detection in Practice (2010) Proceedings of the 4Th International Workshop on Software Clones, pp. 57-64. , Cape Town, South Africa; Duala-Ekoko, E., Robillard, M., Tracking Code Clones in Evolving Software (2007) Proceedings of the 29Th International Conference on Software Engineering, pp. 158-167. , Minnesota, USA; Hou, D., Jacob, F., Jablonski, P., Exploring the Design Space of Proactive Tool Support for Copy-and-Paste Programming (2009) Proceedings of the 2009 Conference of the Center for Advanced Studies on Collaborative Research, pp. 188-202. , Ontario, Canada; Ibrahim, S., Idris, N., Munro, M., Deraman, A., Integrating Software Traceability for Change Impact Analysis (2005) The International Arab Journal of Information Technology, 2 (4), pp. 301-308; Ishio, T., Date, H., Miyake, T., Inoue, K., Mining Coding Patterns to Detect Crosscutting Concerns in Java Programs (2008) Proceedings of the 15Th Working Conference on Reverse Engineering, pp. 123-132. , Antwerp, Belgium; Jarzabek, S., Xue, Y., Are Clones Harmful for Maintenance? (2010) Proceedings of the 4Th International Workshop on Software Clones, pp. 73-74. , Cape Town, South Africa; (2012), http://www.randelshofer.ch/oop/jhotdraw/, JHotDraw; Jiang, L., Misherghi, G., Su, Z., Glondu, S., DECKARD: Scalable and Accurate Tree-based Detection of Code Clones (2007) Proceedings of the 29Th International Conference on Software Engineering, pp. 96-105. , Minnesota, USA; Kamiya, T., Kusumoto, S., Inoue, K., CCFinder: A Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code (2002) IEEE Transactions on Software Engineering, 28 (7), pp. 654-670; Koschke, R., Falke, R., Frenzel, P., Clone Detection using Abstract Syntax Suffix Trees (2006) Proceedings of the 13Th Working Conference in Reverse Engineering, pp. 253-262. , Benevento, Italy; Mubarak-Ali, A., Syed-Mohamed, S., Sulaiman, S., An Enhanced Generic Pipeline Model for Code Clone Detection (2011) Proceedings of the 5Th Malaysian Conference in Software Engineering, pp. 434-438. , Johor Bahru, Malaysia; Roy, C., Cordy, J., (2007) A Survey on Software Clone Detection Research, , Technical Report, Queen's University; (2012), http://sablecc.org/, SableCC",,,,"Zarka Private Univ",,,,,16833198,,,,"English","Int. Arab J. of Info. Tech.",Article,"Final","",Scopus,2-s2.0-84940974173
"Mubarak-Ali A.-F., Sulaiman S., Syed-Mohamad S.M., Xing Z.","56644638000;25825568100;57189082262;8347413500;","Code clone detection and analysis in open source applications",2014,"Handbook of Research on Emerging Advancements and Technologies in Software Engineering",,,,"494","509",,,"10.4018/978-1-4666-6026-7.ch022","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946006901&doi=10.4018%2f978-1-4666-6026-7.ch022&partnerID=40&md5=7c6786b41caa6b9106629d66d20a3662","Universiti Teknologi Malaysia, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia (UTM), Malaysia; School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia; School of Computer Engineering, Nanyang Technological University, Singapore","Mubarak-Ali, A.-F., Universiti Teknologi Malaysia, Malaysia; Sulaiman, S., Faculty of Computing, Universiti Teknologi Malaysia (UTM), Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia; Xing, Z., School of Computer Engineering, Nanyang Technological University, Singapore","Code clone is a portion of codes that contains some similarities in the same software regardless of changes made to the specific code such as removal of white spaces and comments, changes in code syntactic, and addition or removal of code. Over the years, many approaches and tools for code clone detection have been proposed. Most of these approaches and tools have managed to detect and analyze code clones that occur in large software. In this chapter, the authors aim to provide a comparative study on current state-of-the-art in code clone detection approaches and models together with their corresponding tools. They then perform an empirical evaluation on the selected code clone detection tool and organize the large amount of information in a more systematic way. The authors begin with explaining background concepts of code clone terminology. A comparison is done to find out strengths and weaknesses of existing approaches, models, and tools. Based on the comparison done, they then select a tool to be evaluated in two dimensions, which are the amount of detected clones and run time performance of the tool. The result of the study shows that there are various terminologies used for code clone. In addition, the empirical evaluation implies that the selected tool (enhanced generic pipeline model) gives a better code clone output and runtime performance as compared to its generic counterpart. © 2014 by IGI Global. All rights reserved.",,"Cloning; Codes (symbols); Open source software; Pipeline codes; Terminology; Code clone detection; Comparative studies; Empirical evaluations; Generic pipeline models; Open source application; Run-time performance; State of the art; Two-dimension; Open systems",,,,,,,,"Antlr, ANTLR Parser Generator (2005) ANTLR v3, , http://www.antlr.org/files/100/www.antlr.org.html, Retrieved January 30, 2012, from; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and evaluation of clone detection tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591; Biegel, B., Diehl, S., (2010) Highly configurable and extensible code clone detection, , Paper presented at the 17th Working Conference on Reverse Engineering (WCRE). Beverly, MA; Biegel, B., Diehl, S., (2010) JCCD: a flexible and extensible API for implementing custom code clone detectors, , Paper presented at the IEEE/ACM International Conference on Automated Software Engineering (ASE '10). Antwerp, Belgium; Deissenboeck, F., Hummel, B., Juergens, E., Pfaehler, M., Schaetz, B., (2010) Model clone detection in practice, , Paper presented at the 4th International Workshop on Software Clones (IWSC '10). Cape Town, South Africa; Duala-Ekoko, E., Robillard, M.P., Tracking code clones in evolving software (2007) Proceedings of the 29th International Conference on Software Engineering, , ICSE '07). Minneapolis, MN: ICSE; Gang, Z., Xin, P., Zhenchang, X., Wenyun, Z., (2012) Cloning practices: Why developers clone and what can be changed, , Paper presented at the 28th IEEE International Conference on Software Maintenance (ICSM). Trento, Italy; Giesecke, S., (2007) Generic modeling of code clones, , Dagstuhl, Germany: Internationales Begegnungs und Forschungszentrum Informatik (IBFI); Hou, D., Jacob, F., Jablonski, P., (2009) Proactively managing copy-and-paste induced code clones, , Paper presented at the IEEE International Conference on Software Maintenance (ICSM 2009). Edmonton, Canada; Jarzabek, S., Xue, Y., (2010) Are clones harmful for maintenance?, , Paper presented at the 4th International Workshop on Software Clones (IWSC '10). Cape Town, South Africa; Draw, J., (2012) JHotDraw 7, , http://www.randelshofer.ch/oop/jhotdraw/files/120/jhotdraw.html, Retrieved from; Jiang, L., Misherghi, G., Su, Z., Glondu, S., (2007) DECKARD: Scalable and Accurate Treebased Detection of Code Clones, , Paper presented at the 29th international conference on Software Engineering (ICSE '07). Minneapolis, MN; Juergens, E., (2011) Research in Cloning Beyond Code: A First Roadmap, , Paper presented at the 5th International Workshop on Software Clones (IWSC '11). Waikiki, HI; Kamiya, T., Kusumoto, S., Inoue, K., CCFinder: a multilinguistic token-based code clone detection system for large scale source code (2002) IEEE Transactions on Software Engineering, 28 (7), pp. 654-670; Kapser, C.J., Godfrey, M.W., Supporting the analysis of clones in software systems (2006) Journal of Software Maintenance and Evolution: Research and Practice, 18 (2), pp. 61-82; Kapser, C.J., Godfrey, M.W., Cloning considered harmful considered harmful: patterns of cloning in software (2008) Empirical Software Engineering, 13 (6), pp. 645-692; Kawaguchi, S., Yamashina, T., Uwano, H., Fushida, K., Kamei, Y., Nagura, M., Iida, H., (2009) SHINOBI: A Tool for Automatic Code Clone Detection in the IDE, , Paper presented at the 16th Working Conference on Reverse Engineering, 2009. New York, NY; Koschke, R., Baxter, I.D., Michael Conradt, M., Cordy, J.R., (2012) Software Clone Management Towards Industrial Application, , Dagstuhl, Germany: Academic Press; Koschke, R., Falke, R., Frenzel, P., (2006) Clone detection using abstract syntax suffix trees, , Paper presented at the 13th Working Conference on Reverse Engineering (WCRE '06). Benevento; Mubarak-Ali, A.-F., Syed-Mohamed, S.M., Sulaiman, S., (2011) An Enhanced Generic Pipeline Model for Code Clone Detection, , Paper presented at the 5th Malaysian Software Engineering Conference (MySEC). Kuala Lumpur, Malaysia; Roy, C.K., Cordy, J.R., (2007) A Survey on Software Clone Detection Research, p. 115. , School of Computing TR 2007-541, Queen's University; (2009) SableCC. SableCC, , http://sablecc.org/, Retrieved Jan 30, 2012, from; Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., Code clone analysis environment for supporting software development and maintenance (2006) Electronics and Communications in Japan (Part III Fundamental Electronic Science), 89 (11), pp. 10-18; Banks, R., (2011) Clone Detective for Visual Studio 2008: Richard Banks-Agile and.NET, , http://www.richardbanks.org/2008/08/clone-detective-for-visualstudio-2008.html, Retrieved June 5, 2011, from; Baxter, I.D., Yahin, A., Moura, L., Sant'Anna, M., Bier, L., (1998) Clone detection using abstract syntax trees, , The International Conference on Software Maintenance, Bethesda, MD; Calefato, F., Lanubile, F., Mallardo, T., Function clone detection in web applications: A semiautomated approach (2004) Journal of Web Engineering, 3, pp. 3-21; Dang, Y., Ge, S., Huang, R., Zhang, D., (2011) Code clone detection experience at Microsoft, , The 5th International Workshop on Software Clones (IWSC '11), Waikiki, Honolulu, USA; Deissenboeck, F., Hummel, B., Juergens, E., Schätz, B., Wagner, S., Girard, J.F., Teuchert, S., (2008) Clone detection in automotive model-based development, , The 30th International Conference on Software Engineering (ICSE '08), Leipzig, Germany; Di Lucca, G.A., Di Penta, M., Fasolino, A.R., (2002) An approach to identify duplicated web pages, , The 26th International Computer Software and Applications Conference (COMPSAC 2002), Oxford, England; Engelbertink, F., Vogt, H., (2010) How to save on software maintenance costs, pp. 1-12. , OMNEXT; Frey, T., Köppen, V., (2012) Hypermodelling Live OLAP for Code Clone Recommendation, , The Tenth International Baltic Conference on Databases and Information Systems; Girschick, M., Difference detection and visualization in UML class diagrams (2006) Technical University of Darmstadt Technical Report TUDCS-2006-5; Göde, N., Koschke, R., (2009) Incremental Clone Detection, , The 13th European Conference on Software Maintenance and Reengineering (CSMR '09), Kaiserslautern, Germany; Higo, Y., Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., (2002) On software maintenance process improvement based on code clone analysis, , The 4th International Conference on Product Focused Software Process Improvement (PROFES '02), Rovaniemi, Finland; Hou, D., Jacob, F., Jablonski, P., (2009) Exploring the design space of proactive tool support for copy-and-paste programming, , The 2009 conference of the Centre for Advanced Studies on Collaborative Research (CASCON '09), Toronto, Ontario, Canada; Hummel, B., Juergens, E., Heinemann, L., Conradt, M., (2010) Index-based code clone detection: incremental, distributed, scalable, , The IEEE International Conference on Software Maintenance (ICSM 2010), Timisoara; Jiang, Z.M., (2006) Visualizing and understanding code duplication in large software systems. (Master of Mathematics in Computer Science), University of Waterloo, , Waterloo, Ontario, Canada: Available from Google Scholar; Johnson, J.H., (1993) Identifying redundancy in source code using fingerprints, , The Conference of the Centre for Advanced Studies on Collaborative research: software engineering (CASCON '93), Toronto, Ontario, Canada; Kontogiannis, K.A., DeMori, R., Merlo, E., Galler, M., Bernstein, M., Pattern matching for clone and concept detection (1996) Automated Software Engineering, 3 (1), pp. 77-108; Krinke, J., (2001) Identifying similar code with program dependence graphs, , The 8th Working Conference on Reverse Engineering (WCRE'01), Suttgart, Germany; Krinke, J., Gold, N., Jia, Y., Binkley, D., (2010) Cloning and copying between gnome projects, , The 7th IEEE Working Conference on Mining Software Repositories (MSR), Cape Town; Lague, B., Proulx, D., Mayrand, J., Merlo, E.M., Hudepohl, J., (1997) Assessing the benefits of incorporating function clone detection in a development process, , The International Conference on Software Maintenance, Bari, Italy; Leitao, A.M., Detection of redundant code using R 2 D 2 (2004) Software Quality Journal, 12 (4), pp. 361-382; Liu, H., Ma, Z., Shao, W., (2006) Detecting Duplications in Sequence Diagrams Based on Suffix Tree, , The 13th Asia Pacific Software Engineering Conference (APSEC 2006), Kanpur, India; Livieri, S., Higo, Y., Matsushita, M., Inoue, K., (2007) Analysis of the linux kernel evolution using code clone coverage, , The Proceedings of the Fourth International Workshop on Mining Software Repositories (MSR '07), Minneapolis, USA; Monden, A., Nakae, D., Kamiya, T., Sato, S., Matsumoto, K., (2002) Software quality analysis by code clones in industrial legacy software, , The 8th IEEE Symposium on Software Metrics, Ottawa, Canada; Pham, N.H., Nguyen, H.A., Nguyen, T.T., Al-Kofahi, J.M., Nguyen, T.N., (2009) Complete and accurate clone detection in graph-based models, , The IEEE 31st International Conference on Software Engineering (ICSE 2009) Vancouver, BC; Rahman, F., Bird, C., Devanbu, P., Clones: What is that smell? (2012) Empirical Software Engineering, 17 (4-5), pp. 503-530; Roy, C.K., Cordy, J.R., (2008) Scenario-based comparison of clone detection techniques, , Paper presented at the The 16th IEEE International Conference on Program Comprehension (ICPC 2008), Amsterdam; Störrle, H., (2010) Towards clone detection in UML domain models, , The Fourth European Conference on Software Architecture: Companion Volume (ECSA '10), Copenhagen, Denmark; Ueda, Y., Kamiya, T., Kusumoto, S., Inoue, K., (2002) Gemini: Maintenance support environment based on code clone analysis, , The 8th IEEE Symposium on Software Metrics, Ottawa, Canada; Van Rysselberghe, F., Demeyer, S., (2003) Reconstruction of successful software evolution using clone detection, , The 6th International Workshop on Principles of Software Evolution, Helsinki, Finland; Wahler, V., Seipel, D., Wolff, J., Fischer, G., (2004) Clone detection in source code by frequent itemset techniques, , The 4th IEEE International Workshop Source Code Analysis and Manipulation, Chicago, IL","Mubarak-Ali, A.-F.; Universiti Teknologi MalaysiaMalaysia",,,"IGI Global",,,,,,9781466660281; 9781466660274,,,"English","Handb. of Res. on Emerg. Adv. and Technol. in Softw. Eng.",Book Chapter,"Final","",Scopus,2-s2.0-84946006901
"Yusri N., Zulika A., Syed-Mohamad S.M., Abdul Rashid N.A.","56830521400;56986403100;57189082262;57054192400;","Tools for teaching and learning programming: A review and proposed tool",2014,"Frontiers in Artificial Intelligence and Applications","265",,,"859","872",,2,"10.3233/978-1-61499-434-3-859","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84948845006&doi=10.3233%2f978-1-61499-434-3-859&partnerID=40&md5=c2c946f368844334956101a5a449f1c7","School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia","Yusri, N., School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia; Zulika, A., School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia; Abdul Rashid, N.A., School of Computer Sciences, Universiti Sains Malaysia (USM), Malaysia","Learning programming is a process that requires the study of programming principles and algorithms together with appropriate practice. Numerous support tools have been developed to assist lecturers and students in teaching and learning programming, respectively. This paper reviews the tools available; focusing on collaborative learning support functions, and presents an integrative model that provides collaborative features such as communication and social supports. This tool also provides the opportunity for lecturers to pay attention to the degree of progress of each student, which in turns this would motivate the students to learn programming. © 2014 The authors and IOS Press. All rights reserved.","Collaborative tools; Eclipse plugins; Pair programming; Teaching and learning programming","Algorithms; Students; Collaborative learning; Collaborative tools; Eclipse plug-ins; Integrative modeling; Learning programming; Pair-programming; Programming principles; Teaching and learning; Teaching",,,,,,,,"Bravo, C., Marcelino, M.J., Gomes, A.J., Esteves, M., Mendes, A.J., Integrating educational tools for collaborative computer programming learning (2005) Journal of Universal Computer Science, 11, pp. 1505-1517. , 2005-09-28; Jenkins, T., On the difficulty of learning to program (2002) 3rd Annual Conference of LTSN-ICS; Beaubouef, T., Mason, J., Why the high attrition rate for computer science students: Some thoughts and observations (2005) SIGCSE Bull, 37, pp. 103-106; Soller, A.L., Supporting social interaction in an intelligent collaborative learning system (2001) International Journal of Artificial Intelligence in Education (IJAIED), 12, pp. 40-62; Vizcaíno, A., Contreras, J., Favela, J., Prieto, M., An adaptive, collaborative environment to develop good habits in programming (2000) Intelligent Tutoring Systems, 1839, pp. 262-271. , G. Gauthier, C. Frasson, and K. VanLehn, Eds. ed: Springer Berlin Heidelberg; Gokhale, A.A., Collaborative learning enhances critical thinking (1995) Journal of Technology Education, 7, 83p; Gomez-AlBarran, M., The teaching and learning of programming: A survey of supporting software tools (2005) The Computer Journal, 48, pp. 130-140; Dillenbourg, P., What do you mean by collaborative learning? (1999) Collaborative-learning: Cognitive and Computational Approaches, pp. 1-19; Powers, K., Gross, P., Cooper, S., McNally, M., Goldman, K.J., Proulx, V., Carlisle, M., Tools for teaching introductory programming: What works? (2006) Presented at the Proceedings of the 37th SIGCSE Technical Symposium on Computer Science Education, , Houston, Texas, USA; Shaw, R.-S., The relationships among group size, participation, and performance of programming language learning supported with online forums (2013) Comput. Educ, 62, pp. 196-207; Gogoulou, A., Gouli, E., Grigoriadou, M., Adopting exploratory+ collaborative learning in an adaptive CSCL environment for introductory programming (2003) Workshop on Innovations in Teaching Programming, pp. 417-424; Vizcano, A., Prieto, M., (2001) Examining the Effectiveness of New Technology in High School, (6); Boada, I., Soler, J., Prados, F., Poch, J., A teaching/learning support tool for introductory programming courses (2004) Information Technology Based Higher Education and Training, 2004. ITHET 2004. Proceedings of the FIfth International Conference on, pp. 604-609; Kölling, M., Using blue j to introduce programming (2008) Reflections on the Teaching of Programming, 4821, pp. 98-115. , J. Bennedsen, M. Caspersen, and M. Kölling, Eds. ed: Springer Berlin Heidelberg; Verdú, E., Regueras, L.M., Verdú, M.J., Leal, J.P., De Castro, J.P., Queirós, R., A distributed system for learning programming on-line (2012) Computers & Education, 58, pp. 1-10; Li, C., Dong, Z., Untch, R.H., Jagadeesh, D., Developing an interactive practice tool in peerspace for first year computer science students (2013) International Journal of Information and Education Technology, 3, pp. 48-53; Brusilovsky, P., Weber, G., Collaborative example selection in an intelligent example-based programming environment (1996) Presented at the Proceedings of the 1996 International Conference on Learning Sciences, , Evanston, Illinois; Weber, G., Brusilovsky, P., ELM-ART: An adaptive versatile system for web-based instruction (2001) International Journal of Artificial Intelligence in Education (IJAIED), 12, pp. 351-384; Brusilovsky, P., WebEx: Learning from examples in a programming course (2001) Proc. of WebNet'2001, World Conference of the WWW and Internet, pp. 124-129. , Orlando, FL; Gómez-Martín, P., Gómez-Martín, M., González-Calero, P., Javy: Virtual environment for case- based teaching of Java virtual machine (2003) Knowledge-Based Intelligent Information and Engineering Systems, 2773, pp. 906-913. , V. Palade, R. Howlett, and L. Jain, Eds. ed: Springer Berlin Heidelberg; Guibert, N., Girard, P., Guittet, L., Example-based programming: A pertinent visual approach for learning to program (2004) Presented at the Proceedings of the Working Conference on Advanced Visual Interfaces, , Gallipoli, Italy; Gajraj, R., Singh, L., Williams, M., A computer-based programming pedagogy: Stepwise instructed implementation of explained example code (2010) E-Journal of the Caribbean Academy of Sciences, 4, pp. 1-10; McKendrick, J.H., Something for everyone? An evaluation of the use of audio-visual resources in geographical learning in the UK (1999) Journal of Geography in Higher Education, 23, pp. 9-19. , 1999/03/01; Smith, B.K., Blankinship, E., Justifying imagery: Multimedia support for learning through explanation (2000) IBM Syst. J, 39, pp. 749-767; Esteves, M., Mendes, A.J., A simulation tool to help learning of object oriented programming basics (2004) Frontiers in Education, 2, pp. 7-12. , FIE 2004. 34th Annual, 2004; Gomes, A., Mendes, A., SICAS. Interactive system for algorithm development and simulation (2001) Computers and Education, pp. 159-166. , M. Ortega and J. Bravo, Eds. ed: Springer Netherlands; Tillmann, N., Halleux, J.D., Xie, T., Bishop, J., Pex4Fun: A Web-based environment for educational gaming via automated test generation (2013) Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering (ASE 2013), , Tool Demonstrations, Palo Alto, California; Rajala, T., Laakso, M.-J., Kaila, E., Salakoski, T., VILLE: A language-independent program visualization tool (2007) Presented at the Proceedings of the Seventh Baltic Sea Conference on Computing Education Research, 88. , Koli National Park, Finland; Boyer, K.E., Dwight, A.A., Fondren, R.T., Vouk, M.A., Lester, J.C., A development environment for distributed synchronous collaborative programming (2008) Presented at the Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education, , Madrid, Spain; Sawadsky, N., Murphy, G.C., Fishtail: From task context to source code examples (2011) Presented at the Proceedings of the 1st Workshop on Developing Tools as Plug-ins, , Waikiki, Honolulu, HI, USA; Kölling, M., Greenfoot: A highly graphical ide for learning object-oriented programming (2008) Presented at the Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education, , Madrid, Spain; Jurado, F., Molina, A.I., Redondo, M.A., Ortega, M., Cole-programming: Shaping collaborative learning support in eclipse (2013) Tecnologias del Aprendizaje, IEEE Revista Iberoamericana de, 8, pp. 153-162; Vandeventer, J., Barbour, B., CodeWave: A real-time, collaborative IDE for enhanced learning in computer science (2012) Presented at the Proceedings of the 43rd ACM Technical Symposium on Computer Science Education, , Raleigh, North Carolina, USA; Tran, H.T., Dang, H.H., Do, K.N., Tran, T.D., Nguyen, V., An interactive Web-based IDE towards teaching and learning in programming courses (2013) Teaching, Assessment and Learning for Engineering (TALE), 2013 IEEE International Conference on, pp. 439-444; Salinger, S., Oezbek, C., Beecher, K., Schenk, J., Saros: An eclipse plug-in for distributed party programming (2010) Presented at the Proceedings of the 2010 ICSE Workshop on Cooperative and Human Aspects of Software Engineering, , Cape Town, South Africa; Suthers, D., Technology affordances for intersubjective meaning-making: A research agenda for CSCL (2006) International Journal of Computers Supported Collaborative Learning, 1, pp. 315-337; Demetriadis, S., Karakostas, A., Introduction to adaptive collaboration scripting (2009) Intelligent Collaborative E-Learning Systems and Applications, 246, pp. 1-18. , T. Daradoumis, S. Caballé, J. Marquès, and F. Xhafa, Eds. ed: Springer Berlin Heidelberg; Syed-Mohamad, S.M., Yusri, N., Rashid, N.A.A., Malim, N., ReCOOP: An eclipse plug-in for collaborative programming learning (2013) 6th International Conference of Education, Research & Innovation (ICERi 2013), pp. 7043-7051. , Seville, Spain; Yusri, N., Syed-Mohamad, S.M., Integrating social features for collaborative computer programming teaching and learning (2013) Prosiding Seminar Kebangsaan ICT Dalam Pendidikan 2013 (ICT@EDU2013), pp. 1-4. , Perak, Malaysia; Collins, A., Brown, J.S., Holum, A., Cognitive apprenticeship: Making thinking visible (1991) American Educator, 6, pp. 38-46; Lee, Y.-J., Empowering teachers to create educational software: A constructivist approach utilizing Etoys, pair programming and cognitive apprenticeship (2011) Computers & Education, 56, pp. 527-538","Yusri, N.; School of Computer Sciences, Malaysia; email: nuraini@cs.usm.my","Haron H.Fujita H.Selamat A.","","IOS Press","13th International Conference on New Trends in Intelligent Software Methodology Tools, and Techniques, SoMeT 2014","22 September 2014 through 24 September 2014",,116901,09226389,9781614994336,,,"English","Front. Artif. Intell. Appl.",Conference Paper,"Final","",Scopus,2-s2.0-84948845006
"Shamsuddin N.A., Syed-Mohamad S.M., Sulaiman S.","33568306600;57189082262;25825568100;","Capturing users' actions in a Web application to support learnability",2014,"2014 8th Malaysian Software Engineering Conference, MySEC 2014",,, 6986004,"142","147",,,"10.1109/MySec.2014.6986004","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929301164&doi=10.1109%2fMySec.2014.6986004&partnerID=40&md5=86fc69f36fc0a7ec40ff3fb1052959e0","School of Computer Sciences, Universiti Sains Malaysia, USM, Penang, 11800, Malaysia; Faculty of Computing, Universiti Teknologi Malaysia, Skudai, Johor, 81310, Malaysia","Shamsuddin, N.A., School of Computer Sciences, Universiti Sains Malaysia, USM, Penang, 11800, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, USM, Penang, 11800, Malaysia; Sulaiman, S., Faculty of Computing, Universiti Teknologi Malaysia, Skudai, Johor, 81310, Malaysia","Usability is an important factor that affects use of systems. Numerous works have been introduced to improve usability especially in Web applications. However, usability features sometimes fail to meet the needs of diverse user communities with different requirements, expectations, and skill sets. Getting started with unfamiliar interfaces and learning new functionality have always remained as challenges to novices and even to experts in Web applications. Therefore, it is necessary for users to get help in learning Web functionality when problems arise. This paper proposes Action-Based Help technique to assist users in learning Web functions in real-time. A controlled experiment has been conducted to evaluate its effectiveness in comparison with the text-based online help. The result shows that adoption of the proposed technique in a Webmail was able to improve certain learnability metrics that are shorter time taken to complete tasks and lower frequency in accessing the help system. © 2014 IEEE.","effectiveness; learnability; usability; Webmail","Software engineering; Usability engineering; World Wide Web; Controlled experiment; effectiveness; Learnability; Lower frequencies; usability; User communities; Web functionalities; Webmail; Social networking (online)",,,,,,,,"Chung, L., Do Prado Leite, J.C.S., On non-functional requirements in software engineering (2009) Conceptual Modeling: Foundations and Applications, pp. 363-379. , ed: Springer; Firesmith, D., Using quality models to engineer quality requirements (2003) Journal of Object Technology, 2, pp. 67-75; Ebert, C., Putting requirement management into praxis: Dealing with nonfunctional requirements (1998) Information and Software Technology, 40, pp. 175-185; Mairiza, D., Zowghi, D., Nurmuliani, N., An investigation into the notion of non-functional requirements (2010) Presented at the Proceedings of the 2010 ACM Symposium on Applied Computing, , Sierre; Tripathi, P., Pandey, M., Bharti, D., Towards the identification of usability metrics for academic web-sites (2010) 2010 the 2nd International Conference on Computer and Automation Engineering (ICCAE), pp. 393-397; Offutt, J., Quality attributes of web software applications (2002) Software, IEEE, 19, pp. 25-32; (2001) Software Product Evaluation-Quality Characteristics and Guidelines for the User"", , ISO/IEC 9126 International Organization for Standardization, Geneva; Kang, H., Plaisant, C., Shneiderman, B., New approaches to help users get started with visual interfaces: Multi-layered interfaces and integrated initial guidance (2003) Proceedings of the 2003 Annual National Conference on Digital Government Research, pp. 1-6; Nielsen, J., (1994) Usability Engineering: Access Online Via, , Elsevier; Matera, M., Rizzo, F., Carughi, G.T., Web usability: Principles and evaluation methods (2006) Web Engineering, pp. 143-180. , ed: Springer; Orehovacki, T., Proposal for a set of quality attributes relevant for web 2.0 application success (2010) 32nd International Conference on Information Technology Interfaces (ITI), 2010, pp. 319-326; Olsina, L., Sassano, R., Mich, L., Towards the quality of web 2.0 applications (2009) 8th International Workshop on Web Oriented Software Technology (IWWOST2009); Baecker, R., Showing instead of telling (2002) Proceedings of the 20th Annual International Conference on Computer Documentation, pp. 10-16; Dutke, S., Reimer, T., Evaluation of two types of online help for application software (2000) Journal of Computer Assisted Learning, 16, pp. 307-315; Lang, H., Nothdurft, F., An avatar-based help system for a grid computing web portal (2012) Proceedings of the 14th ACM International Conference on Multimodal Interaction, pp. 295-296; Chilana, P.K., Ko, A.J., Wobbrock, J.O., LemonAid: Selection-based crowdsourced contextual help for web applications (2012) Proceedings of the 2012 ACM Annual Conference on Human Factors in Computing Systems, pp. 1549-1558; Karam, M., Abou Ibrahim, M., Synchronous online help support with visual instruction aids for workflow-based MVC web applications (2009) Proceedings of the 27th ACM International Conference on Design of Communication, pp. 105-114; Bevan, N., MacLeod, M., Usability measurement in context (1994) Behaviour & Information Technology, 13, pp. 132-145; Shneiderman, B., Promoting universal usability with multi-layer interface design (2003) Presented at the Proceedings of the 2003 Conference on Universal Usability, , Vancouver, British Columbia, Canada; Santos, P.J., Badre, A., (1995) Discount Learnability Evaluation; Calero, C., Ruiz, J., Piattini, M., Classifying web metrics using the web quality model (2005) Online Information Review, 29, pp. 227-248; (2002) Software Software Engineering-Product Quality-Part 2: External Metrics, , ISO/IEC TR 9126-2 International Organization for Standardization, Geneva; Yao, J., Nauman, M., Khan, S., Khan, S., Helplets: A common sense-based collaborative help collection and retrieval architecture for web-enabled systems (2010) Web-based Support Systems, pp. 43-64. , ed: Springer London; Shamsuddin, N.A., Sulaiman, S., Syed-Mohamad, S.M., Zamli, K.Z., Improving learnability and understandability of a web application using an action-based technique (2011) Software Engineering (MySEC), 2011 5th Malaysian Conference in, pp. 245-250; Huang, J., Twidale, M.B., Graphstract: Minimal graphical help for computers (2007) Proceedings of the 20th Annual ACM Symposium on User Interface Software and Technology, pp. 203-212; Plaisant, C., Shneiderman, B., Show me! guidelines for producing recorded demonstrations (2005) IEEE Symposium on Visual Languages and Human-Centric Computing, pp. 171-178; Knabe, K., Apple guide: A case study in user-aided design of online help (1995) Conference Companion on Human Factors in Computing Systems, pp. 286-287; Grossman, T., Fitzmaurice, G., ToolClips: An investigation of contextual video assistance for functionality understanding (2010) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 1515-1524; Trochim, W.M.K., (2000) The Research Methods Knowledge Base, , (2nd ed.). Cincinnati, OH, : Atomic Dog Publishing; Basili, V.R., Caldiera, G., Rombach, H.D., The goal question metric approach (1994) Encyclopedia of Software Engineering, 2, pp. 528-532",,"Jawawi D.N.A.Sulaiman S.Mohamad R.Sa'Adon N.A.","","Institute of Electrical and Electronics Engineers Inc.","8th Malaysian Software Engineering Conference, MySEC 2014","23 September 2014 through 24 September 2014",,109755,,9781479954391,,,"English","Malays. Softw. Eng. Conf., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84929301164
"Kamalzaman S.N.A., Syed-Mohamad S.M., Sulaiman S., Zamli K.Z.","55014706300;57189082262;25825568100;8701576800;","Supporting maintenance of web applications using user-centered technique",2012,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC","2",, 6462780,"43","49",,2,"10.1109/APSEC.2012.114","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874612767&doi=10.1109%2fAPSEC.2012.114&partnerID=40&md5=dff43b950f1d8b8f737db7b27c48a7d5","School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia; Faculty of Computer System and Software Engineering4, Universiti Malaysia Pahang, 26300 Gambang, Kuantan, Pahang, Malaysia","Kamalzaman, S.N.A., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Sulaiman, S., Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia; Zamli, K.Z., Faculty of Computer System and Software Engineering4, Universiti Malaysia Pahang, 26300 Gambang, Kuantan, Pahang, Malaysia","Maintenance is crucial to ensure delivered software continues to meet its end users' evolving needs mainly among Web applications' users. Many approaches and tools have been developed for handling modification requests, of which is the first step of the change management process. However, they lack of functionality to facilitate end users to specify their requests. This limitation causes problems not only to the end users, but to the maintainers as well, who need to understand the requests thoroughly before making any changes. We propose a user-centered technique to support the maintenance process by managing and tracking the modification requests effectively. This paper reports the implementation of the proposed technique as a tool and includes its adoption on a Web application. Initial case study shows that the tool is able to support end users to specify their requests easily and quickly, and maintainers to handle the requests effectively. © 2012 IEEE.","Maintenance; modification requests; Web applications","Application programs; Maintenance; World Wide Web; Change management process; End users; Maintenance process; Modification requests; User-centered; WEB application; Software engineering",,,,,,,,"International standard-ISO/IEC 14764 IEEE Std 14764-2006 software engineering software life cycle processes & 2013; maintenance (2006) ISO/IEC 14764: 2006 (E) IEEE Std 14764-2006 Revision of IEEE Std 1219-1998), pp. 1-46; Stojanov, Z., Dobrilovic, D., Jevtic, V., Identifying properties of software change request process: Qualitative investigation in very small software companies (2011) IEEE 9th International Symposium on Intelligent Systems and Informatics (SISY), pp. 47-52; Nasir, Z., Abbasi, A.Z., A framework for software maintenance and support phase (2010) International Conference on Information and Emerging Technologies (ICIET), pp. 1-6; Trastour, D., Fink, R., Fen, L., Changerefinery: Assisted refinement of high-level IT change requests (2000) IEEE International Symposium on Policies for Distributed Systems and Networks, 2009. POLICY 2009, pp. 68-75; Stojanov, Z., Dobrilovic, D., Perisic, B., An approach in modifying submission phase of change request process (2008) 6th International Symposium on Intelligent Systems and Informatics, 2008. SISY 2008, pp. 1-5; Stojanov, Z., Dobrilovic, D., Perisic, B., Modeling a submission phase of change request process in context of a running application (2009) 7th International Symposium on Intelligent Systems and Informatics 2009. SISY '09, pp. 131-136; Sivaji, A., Shi-Tzuaan, S., Abdullah, M.R., Enhancing the effectiveness of usability evaluation by automated heuristic evaluation system (2011) Third International Conference on Computational Intelligence, Communication Systems and Networks (CICSyN), pp. 48-53; Junio, G.A., Malta, M.N., De Mossri Almeida, H., Marques-Neto, H.T., Valente, M.T., On the benefits of planning and grouping software maintenance requests (2011) 15th European Conference on Software Maintenance and Reengineering (CSMR) 2011, pp. 55-64; Tasks and Project for Software Development, , http://www.atlassian.com/software/jira/overview, JIRA Track Bugs; MANTIS Web-based Bug Tracking System, , http://www.mantisbt.org/; Bugzilla Defect Tracking System or Bug Tracking System, , http://www.bugzilla.org/; BONTQ Bug Tracking System, , http://www.bontq.com/; USERSNAP, , http://usersnap.com/; MERTONIUM Client Feedback Extension for Joomla, , http://mertonium.com/client-feedback-extension-for-joomla/; FISHEYE Know the History of Your Source, , http://www.atlassian.com/software/fisheye/overview; CRUCIBLE Source Code Disinfectant, , http://www.atlassian.com/software/crucible/overview; Peffers, K., Tuunanen, T., Rothenberger, M.A., Chatterjee, S., A design science research methodology for information systems research (2008) Journal of Management Information Systems, 24, pp. 45-77; Dooley, J., (2011) Software Development and Professional Practice; Pressman, R.S., Lowe, D., (2008) Web Engineering: A Practitioner's Approach, , McGraw-Hill Higher Education; Kamalzaman, S.N.A., Sulaiman, S., Syed-Mohamad, S.M., User-centered technique for managing and tracking modification requests in prototype-based web applications (2011) 5th Malaysian Conference in Software Engineering (MySEC), pp. 165-170","Kamalzaman, S.N.A.; School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; email: snak10_com019@student.usm.my",,"ACM Hong Kong Chapter;IEEE Hong Kong Section Computer Society Chapter","IEEE Computer Society","19th Asia-Pacific Software Engineering Conference, APSEC 2012","4 December 2012 through 7 December 2012","Hong Kong",95873,15301362,9780769549224,,,"English","Proc. Asia Pac. Softw. Eng. Conf. APSEC",Conference Paper,"Final","",Scopus,2-s2.0-84874612767
"Ali A.-F.M., Sulaiman S., Syed-Mohamad S.M.","55012077600;25825568100;57189082262;","An enhanced generic pipeline model for code clone detection",2011,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011",,, 6140712,"434","438",,4,"10.1109/MySEC.2011.6140712","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857312403&doi=10.1109%2fMySEC.2011.6140712&partnerID=40&md5=f190496380efeb9d239e3aaa1684c50a","School of Computer Sciences, UniversitiSains Malaysia, 11800 USM, Penang, Malaysia; Faculty of Computer Science and Information Systems, UniversitiTeknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia","Ali, A.-F.M., School of Computer Sciences, UniversitiSains Malaysia, 11800 USM, Penang, Malaysia; Sulaiman, S., School of Computer Sciences, UniversitiSains Malaysia, 11800 USM, Penang, Malaysia, Faculty of Computer Science and Information Systems, UniversitiTeknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, UniversitiSains Malaysia, 11800 USM, Penang, Malaysia","Maintainability is an important attribute when developing software. One of the factors that negatively affect maintainability of software is cloning. Cloning is identical copies of the same instances or fragments. Code cloning happens due to rapid changes when programmers perform clone instances and copy-paste technique. Although copy and paste is widely used in code reusability approach, it significantly increases maintenance cost. Current code clone research focuses in detection and analysis of code clones in order to help software developers to identify code clones in a source code and reuse the source code in order to decrease the maintenance cost. Necessary measures needed in order to reduce issues caused by cloning during implementation. Therefore, there is a need in exploring problems and possibilities associated in code cloning. This paper proposes an enhancement of a generic pipeline model for code clone detection. With the support of a tool, we implement and apply the proposed approach. © 2011 IEEE.","Code clone; code clone detection; generic pipeline model; maintainability; reusability","Code clone; Code clone detection; Code cloning; Code reusability; Copy-and-paste; Current codes; generic pipeline model; Maintenance cost; Pipeline models; Rapid changes; Software developer; Source codes; Codes (symbols); Computer programming; Computer software reusability; Cost benefit analysis; Maintainability; Reusability; Software engineering; Cloning",,,,,,,,"Jarzabek, S., Xue, Y., Are clones harmful for maintenance? (2010) IWSC'10: Proceedings of the 4th International Workshop on Software Clones, pp. 73-74. , New York, NY, USA: ACM; Basit, H.A., Jarzabek, S., Detecting higher-level similarity patterns in programs (2005) Foundations of Software Engineering, pp. 156-165; Monden, A., Nakae, D., Kamiya, T., Ichi Sato, S., Ichi Matsumoto, K., Software quality analysis by code clones in industrial legacy software (2002) METRICS '02: Proceedings of the 8th International Symposium on Software Metrics, p. 87. , Washington, DC, USA: IEEE Computer Society; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and evaluation of clone detection tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591. , DOI 10.1109/TSE.2007.70725; Koschke, R., Falke, R., Frenzel, P., Clone detection using abstract syntax suffix trees (2006) Working Conference on Reverse Engineering, pp. 253-262; Lee, S., Jeong, S., SDD: High Performance Code Clone Detection System for Large Scale Source Code (2005) Companion to the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, pp. 140-141; Biegel, B., Diehl, S., Highly Configurable and Extensible Code Clone Detection (2010) 17th Working Conference on Reverse Engineering, pp. 237-241; Kamiya, T., Kusumoto, S., Inoue, K., Ccfinder: A multilinguistic token-based code clone detection system for large scale source code (2002) IEEE Trans. Softw. Eng., pp. 654-670; Duala-Ekoko, E., Robillard, M.P., (2007) Tracking Code Clones in Evolving Software, pp. 158-167; Jiang, L., Misherghi, G., Su, Z., Glondu, S., (2007) Deckard: Scalable and Accurate Tree-based Detection of Code Clones, pp. 96-105; Biegel, B., Diehl, S., JCCD: A Flexible and Extensible API for Implementing Custom Code Clone Detectors (2010) 25th IEEE/ACM International Conference on Automated Software Engineering, pp. 167-168; (2011), http://www.jedit.org, Oct","Ali, A.-F.M.; School of Computer Sciences, , 11800 USM, Penang, Malaysia; email: ama10_sk040@student.usm.my",,,,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011","13 December 2011 through 14 December 2011","Johor Bahru",88624,,9781457715310,,,"English","Malays. Conf. Softw. Eng., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84857312403
"Shamsuddin N.A., Sulaiman S., Syed-Mohamad S.M., Zamli K.Z.","33568306600;25825568100;57189082262;8701576800;","Improving learnability and understandability of a web application using an action-based technique",2011,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011",,, 6140678,"245","250",,3,"10.1109/MySEC.2011.6140678","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857295818&doi=10.1109%2fMySEC.2011.6140678&partnerID=40&md5=45f1c5f14c7467db5430978f74483ddd","School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia; School of Electrical and Electronic Engineering, Universiti Sains Malaysia, Engineering Campus, Seri Ampangan, 14300 Nibong Tebal, Penang, Malaysia","Shamsuddin, N.A., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Sulaiman, S., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia, Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Zamli, K.Z., School of Electrical and Electronic Engineering, Universiti Sains Malaysia, Engineering Campus, Seri Ampangan, 14300 Nibong Tebal, Penang, Malaysia","The emergence of the Internet era leads to the widely used of Web-based applications. Diverse demographic of users requires Web applications to have the features that enable different level of users to learn and understand their functionalities easily and instantly. Thus, a Web application that is learnable and understandable allows users to interact better and gain more advantages of using the Web application. Users' interactions with a system often reflect users' knowledge and understanding of the system. By studying users' interactions, Web developers can provide guidance to users, which promote the learnability and understandability of a Web application. The aim of this paper is to improve usability in the aspects of learnability and understandability through user interface design of a Web application. This paper proposes an action-based technique to improve users' learnability and understandability by studying users' interactions while they are interacting with the user interface of a Web application. Web developers can apply the proposed technique in designing a more usable Web application in the future. © 2011 IEEE.","learnability; understandability; usability; user interactions; Web application","Learnability; Understandability; usability; User interaction; WEB application; Software engineering; User interfaces; World Wide Web",,,,,,,,"Offutt, J., Quality attributes of Web software applications (2002) IEEE Software, 19 (2), pp. 25-32. , DOI 10.1109/52.991329; Shneiderman, B., Promoting universal usability with multi-layer interface design Proceedings of the 2003 Conference on Universal Usability, Vancouver, British Columbia, Canada, 2003, pp. 1-8; Christiernin, L.G., Lindahl, F., Torgersson, O., Designing a multi-layered image viewer Proceedings of the Third Nordic Conference on Human-computer Interaction, Tampere, Finland, 2004, pp. 181-184; Kang, H., Plaisant, C., Shneiderman, B., New approaches to help users get started with visual interfaces: Multi-layered interfaces and integrated initial guidance Proceedings of the 2003 Annual National Conference on Digital Government Research, Boston, MA, 2003, pp. 1-6; Aberg, J., Shahmehri, N., An empirical study of human Web assistants: Implications for user support in Web information systems Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, Seattle, Washington, United States, 2001, pp. 404-411; Kobayashi, M., Shinozaki, M., Sakairi, T., Touma, M., Daijavad, S., Wolf, C., Collaborative customer services using synchronous Web browser sharing Proceedings of the 1998 ACM Conference on Computer Supported Cooperative Work, Seattle, Washington, United States, 1998, pp. 99-109; Mackey, T.P., Ho, J., Exploring the relationships between Web usability and students' perceived learning in Web-based multimedia (WBMM) tutorials (2008) Computers and Education, 50 (1), pp. 386-409. , DOI 10.1016/j.compedu.2006.08.006, PII S0360131506001126; (2001) Software Engineering-Product Quality-Part 1: Quality Model, , ISO/IEC 9126-1:2001; Haramundanis, K., Learnability in information design (2001) Book Learnability in Information Design, pp. 7-11. , Editor; Khalifa, M., Lam, R., Web-based learning: Effects on learning process and outcome (2002) IEEE Transactions on Education, 45 (4), pp. 350-356. , DOI 10.1109/TE.2002.804395; Mueller, F., Lockerd, A., Cheese: Tracking mouse movement activity on websites, a tool for user modeling Proc. CHI '01 Extended Abstracts on Human Factors in Computing Systems, Seattle, Washington, 2001, pp. 279-280; Ceaparu, I., Lazar, J., Bessiere, K., Robinson, J., Shneiderman, B., Determining Causes and Severity of End-User Frustration (2002) Book Determining Causes and Severity of End-User Frustration, , Editor; Garrido, A., Rossi, G., Distante, D., Model Refactoring in Web Applications (2007) Book Model Refactoring in Web Applications, pp. 89-96. , Editor; Garrido, A., Rossi, G., Distante, D., Refactoring for Usability in Web Applications (2010) Software, IEEE, pp. 1-1; Blouin, A., Beaudoux, O., Improving modularity and usability of interactive systems with Malai Proceedings of the 2nd ACM SIGCHI Symposium on Engineering Interactive Computing Systems, Berlin, Germany, 2010; Junior, N.C., Abackerli, A.J., Consularo, L.A., User Interface Design for VCMMs: An Approach to Increase Fidelity and Usability (2006) Book User Interface Design for VCMMs: An Approach to Increase Fidelity and Usability, pp. 130-135. , Editor; Paganelli, L., Paterno, F., Intelligent analysis of user interactions with web applications Proceedings of the 7th International Conference on Intelligent User Interfaces, San Francisco, California, USA, 2002, pp. 111-118; Atterer, R., Wnuk, M., Schmidt, A., Knowing the user's every move: User activity tracking for website usability evaluation and implicit interaction Proceedings of the 15th International Conference on World Wide Web, Edinburgh, Scotland, 2006, pp. 203-212; Chen, Y., Yu, Y., Zhang, W., Shen, J., Analyzing User Behavior History for constructing user profile (2008) Book Analyzing User Behavior History for Constructing User Profile, pp. 343-348. , Editor","Shamsuddin, N.A.; School of Computer Sciences, , 11800 USM, Penang, Malaysia; email: nas10_com018@student.usm.my",,,,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011","13 December 2011 through 14 December 2011","Johor Bahru",88624,,9781457715310,,,"English","Malays. Conf. Softw. Eng., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84857295818
"Kamalzaman S.N.A., Sulaiman S., Syed-Mohamad S.M.","55014706300;25825568100;57189082262;","User-centered technique for managing and tracking modification requests in prototype-based web applications",2011,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011",,, 6140663,"165","170",,1,"10.1109/MySEC.2011.6140663","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857290283&doi=10.1109%2fMySEC.2011.6140663&partnerID=40&md5=cdda4124ab2c4ceebd153d4d5a83a8f3","School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia","Kamalzaman, S.N.A., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Sulaiman, S., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia, Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM, Skudai, Johor, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia","Nowadays, a lot of development of Web applications use prototyping approach such as throw-away prototyping and evolutionary prototyping. In order to fulfill the users' requirements, developers need to communicate with the users, therefore prototyping is widely used in software development to assist these developers. As we develop Web application and release them as a number of versions or releases of prototype, it constantly requires changes to evolve and meet users' specific requirements. Thus, prototyping approach may cause more maintenance cost to be incurred due to scope creep during software development. In addition, it provides the challenges to a maintenance team who is mostly not the actual development team, to manage and track maintenance process of such Web applications. This paper proposes a user-centered technique for managing and tracking modification requests in a Web application. We anticipate that the proposed technique can assist maintainers to manage and track modification of a Web application in more effective and efficient manner by capturing, classifying and validating the enhancement requests, problem report and modification requests directly from the users during the prototyping process itself. This in turn will avoid unexpected modification requests once we release the Web application and to allow the tracing of both enhancement and problem report during prototyping and modification requests and problem report during maintenance. © 2011 IEEE.","enhancement request; modification requests; protoype-based Web applications; software maintenance; software prototyping","Development teams; Enhancement requests; Evolutionary prototyping; Maintenance cost; Modification requests; Prototyping process; Track maintenance; User-centered; WEB application; Computer software maintenance; Maintainability; Software design; Software prototyping; World Wide Web",,,,,,,,"(2006) International Standard - ISO/IEC 14764 IEEE Std 14764-2006 Software Engineering 2013; Software Life Cycle Processes 2013; Maintenance, pp. 1-46. , ISO/IEC 14764:2006 (E) IEEE Std 14764-2006 (Revision of IEEE Std 1219-1998); Grubb, P., Takang, A.A., (2003) Software Maintenance: Concepts and Practice: World Scientific; Bleek, W.G., Jeenicke, M., Klischewski, R., Developing Web-based applications through e-prototyping Proceedings 26th Annual International Computer Software and Applications Conference, COMPSAC, 2002, pp. 609-614; Stojanov, Z., Dobrilovic, D., An approach to integration of maintenance services in educational Web portal 8th International Symposium on Intelligent Systems and Informatics (SISY), 2010, pp. 443-448; Ghosheh, E., Black, S., Qaddour, J., A General Evaluation Criteria for Web Applications Maintainability Models Region 5 Conference, IEEE, 2008, pp. 1-6; Nasir, Z., Abbasi, A.Z., A framework for software maintenance and support phase International Conference on Information and Emerging Technologies (ICIET), 2010, pp. 1-6; Tang, L., Mei, Y., Ding, J., Metric-Based Tracking Management in Software Maintenance Second International Workshop on Education Technology and Computer Science (ETCS), 2010, pp. 675-678; Olsen, N.C., The software rush hour [software engineering] (1993) Software, IEEE, 10, pp. 29-37; Harjani, D.R., Queille, J.P., A process model for the maintenance of large space systems software Proceedings, Conference on Software Maintenance, 1992, pp. 127-136; Ghosh, S.M., Sharma, H.R., Mohabay, V., Analysis and Modelling of Change Management Process Model (2011) International Journal of Software Engineering and Its Applications, 5. , April, 2011; Boldyreff, C., Burd, E.L., Hather, R.M., An evaluation of the state of the art for application management Proceedings., International Conference on Software Maintenance, 1994, pp. 161-169; Murugesan, S., Deshpande, Y., Hansen, S., Ginige, A., Web Engineering: A New Discipline for Development of Web-Based Systems (2001) Web Engineering, pp. 3-13. , Springer Berlin/Heidelberg; Mayr, H., Web Engineering as a Specialization of Software Engineering: Differences in Project Management Education (2005) Journal of Systematics, Cybernetics and Informatics, 3, pp. 84-91; Davis, A.M., Operational prototyping: A new development approach (1992) Software, IEEE, 9, pp. 70-78; (1992) Computer Aided System Prototyping, , Luqi; Junio, G.A., Malta, M.N., De Almeida Mossri, H., Marques-Neto, H.T., Valente, M.T., On the Benefits of Planning and Grouping Software Maintenance Requests 15th European Conference on Software Maintenance and Reengineering (CSMR), 2011, pp. 55-64; BONTQ Bug Tracking System, , http://www.bontq.com/; Serrano, N., Ciordia, I., Bugzilla, ITracker, and other bug trackers (2005) IEEE Software, 22 (2), pp. 11-13. , DOI 10.1109/MS.2005.32; Bugzilla Defect Tracking System or Bug Tracking System, , http://www.bugzilla.org/; Prause, C.R., Scholten, M., Zimmermann, A., Reiners, R., Eisenhauer, M., Managing the Iterative Requirements process in a Multinational Project Using an Issue Tracker (2008) IEEE International Conference on Global Software Engineering, ICGSE 2008, pp. 151-159; JIRA Issue and Bug Tracking, , http://www.atlassian.com/software/jira/; MANTIS Web-based Bug Tracking System, , http://www.mantisbt.org/; Change Request.com the Easy Way to Manage Website Changes, , http://www.changerequest.com/; YouTrack 3 Keyboard Centric Issue and Bug Tracker, , http://www.jetbrains.com/youtrack/; FishEye Explore Your Source Code, , http://www.atlassian.com/software/fisheye/; Crucible Code Review That Works, , http://www.atlassian.com/software/crucible/","Kamalzaman, S.N.A.; School of Computer Sciences, , 11800 USM, Penang, Malaysia; email: snak10_com019@student.usm.my",,,,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011","13 December 2011 through 14 December 2011","Johor Bahru",88624,,9781457715310,,,"English","Malays. Conf. Softw. Eng., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84857290283
"Rais A.E., Sulaiman S., Syed-Mohamad S.M.","55013921900;25825568100;57189082262;","Game-based approach and its feasibility to support the learning of object-oriented concepts and programming",2011,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011",,, 6140689,"307","312",,24,"10.1109/MySEC.2011.6140689","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857252321&doi=10.1109%2fMySEC.2011.6140689&partnerID=40&md5=721318d8915643593ad438eee071bb0a","School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia","Rais, A.E., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia; Sulaiman, S., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia, Faculty of Computer Science and Information Systems, Universiti Teknologi Malaysia, 81310 UTM Skudai, Johor, Malaysia; Syed-Mohamad, S.M., School of Computer Sciences, Universiti Sains Malaysia, 11800 USM, Penang, Malaysia","Object-oriented has been widely used in software development. Hence, learning object-oriented concepts is crucial in undergraduate Computer Science or Information Technology programs. Learning object-oriented programming requires high concentration to understand the whole concepts before embarking on the practical aspect. It could be difficult for some students especially novices. In addition, lecturers might not be able to explain the subject effectively due to many factors. This research aims to justify and investigate more aspects to support the understanding of object-oriented concepts through games. Game is one of the approaches that could attract students' attention and increases their focus in learning object-oriented theory and practice. This paper reports a feasibility study using a controlled experiment that investigated the effect of using games in learning object-oriented programming among Computer Science students. The findings show that learners prefer using game as compared to traditional approach of teaching. Based on the study, we propose a more effective game-based approach to support the students in learning object-oriented concepts and programming. © 2011 IEEE.","Game-Based Approach; Goal Question Metric (GQM); Object-Oriented Concepts; Object-Oriented Programming (OOP)","Computer science students; Controlled experiment; Feasibility studies; Game-Based Approach; Goal-question-metric; High concentration; Information technology programs; Object oriented; Object-oriented concepts; Theory and practice; Information technology; Object oriented programming; Students; Software engineering",,,,,,,,"Klump, R., Understanding object-oriented programming concepts (2001) Power Engineering Society Summer Meeting, 2001, pp. 1070-1074. , IEEE, Vancouver, BC, Canada; (2010) Lesson 8: Object-Oriented Programming; Jie, A., Li, Y., Chen, B., Ye, J., Zou, J., The education reform and innovation of object-oriented programming course in Normal University Computer Science and Education (ICCSE), 2010 5th International Conference On, Hefei, China, 2010, pp. 700-703; Tang, S., Hanneghan, M., A Model-Driven Framework to Support Development of Serious Games for Game-based Learning (2010) Developments in E-systems Engineering (DESE), 2010, pp. 95-100; Edirisinghe, E.M.N.S., Teaching students to identify common programming errors using a game (2008) Proceedings of the 9th ACM SIGITE Conference on Information Technology Education, , Cincinnati, OH, USA: ACM, New York, NY, USA; Rajaravivarma, R., A games-based approach for teaching the introductory programming course (2005) Newsletter SIGCSE Bulletin, 37, pp. 98-102. , 4 December 2005; Pivec, M., Dziabenko, O., Schinnerl, I., Aspects of Game- Based Learning, 2003. , http://www.unigame.net/html/I-Know_GBL-2704.pdf; Clarke, S., Thomas, R., Adams, M., Developing case studies to enhance student learning (2005) Proceedings of the 7th Australasian Conference on Computing Education, 42. , Newcastle, New South Wales, Australia: Australian Computer Society, Inc; Leutenegger, S., Edgington, J., A games first approach to teaching introductory programming (2007) SIGCSE 2007: 38th SIGCSE Technical Symposium on Computer Science Education, pp. 115-118. , DOI 10.1145/1227310.1227352, SIGCSE 2007: 38th SIGCSE Technical Symposium on Computer Science Education; Chinn, D., Sheard, J., Carbone, A., Laakso, M.-J., Study habits of CS1 students: What do they do outside the classroom? (2010) Proceedings of the Twelfth Australasian Conference on Computing Education, 103. , Brisbane, Australia: Australian Computer Society, Inc; Purdie, N., Hattie, J., Assessing Studentsí Conceptions of Learning (2002) Australian Journal of Educational & Developmental Psychology, 2, pp. 17-32; Salim, A., Hassan, S., Hamdi, S., Youssef, S., Adel, H., Khattab, S., El-Ramly, M., On using 3D animation for teaching computer programming in Cairo University Informatics and Systems (INFOS), 2010 the 7th International Conference On, Cairo 2010, pp. 1-5; Edgar, G.A., Darwin: A survival game for programmers (1987) Comput. Lang., 4, pp. 79-86. , San Francisco, CA; Kölling, M., Greenfoot: A highly graphical ide for learning object-oriented programming (2008) Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education, , Madrid, Spain: ACM; Mullins, P.M., Conlon, M., Engaging students in programming fundamentals using alice 2.0 (2008) Proceedings of the 9th ACM SIGITE Conference on Information Technology Education, pp. 81-87. , Cincinnati, OH, USA: ACM New York, NY, USA; Kölling, M., The Greenfoot Programming Environment (2010) Trans. Comput. Educ., 10, pp. 1-21; Basili, V., Caldiera, G., Rombach, H., The goal question metric approach (1994) Encyclopedia of Software Engineering, 1, pp. 98-102. , In J. Marciniak (ed.); Isbister, K., Schaffer, N., (2008) Game Usability: Advancing the Player Experience, pp. 381-388. , Morgan Kaufmann","Rais, A.E.; School of Computer Sciences, , 11800 USM, Penang, Malaysia; email: aer10_sk063@student.usm.my",,,,"2011 5th Malaysian Conference in Software Engineering, MySEC 2011","13 December 2011 through 14 December 2011","Johor Bahru",88624,,9781457715310,,,"English","Malays. Conf. Softw. Eng., MySEC",Conference Paper,"Final","",Scopus,2-s2.0-84857252321
"Syed-Mohamad S.M., McBride T.","57189082262;8415398300;","Reliability growth of open source software using defect analysis",2008,"Proceedings - International Conference on Computer Science and Software Engineering, CSSE 2008","2",, 4722138,"662","667",,8,"10.1109/CSSE.2008.1085","https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951542751&doi=10.1109%2fCSSE.2008.1085&partnerID=40&md5=c194246e0cbdf7fa5b93a45b0644e602","Faculty of Engineering and Information Technology, University of Technology, Sydney","Syed-Mohamad, S.M., Faculty of Engineering and Information Technology, University of Technology, Sydney; McBride, T., Faculty of Engineering and Information Technology, University of Technology, Sydney","We examine two active and popular open source products to observe whether or not open source software has a different defect arrival rate than software developed in-house. The evaluation used two common models of reliability growth models; concave and S-shaped and this analysis shows that open source has a different profile of defect arrival. Further investigation indicated that low level design instability is a possible explanation of the different defect growth profile. © 2008 IEEE.","Defect classification; Open source software; Software reliability","Arrival rates; Common models; Defect analysis; Defect classification; Defect growth; Low level; Open source products; Open source software; Open sources; Reliability growth; Reliability growth model; S-shaped; Computer software selection and evaluation; Defects; Open systems; Quality assurance; Reliability analysis; Software engineering; Software reliability",,,,,,,,"","Syed-Mohamad, S. M.; Faculty of Engineering and Information Technology, , Sydney; email: sharifah@it.uts.edu.au",,,,"International Conference on Computer Science and Software Engineering, CSSE 2008","12 December 2008 through 14 December 2008","Wuhan, Hubei",75355,,9780769533360,,,"English","Proc. - Int. Conf. Comput. Sci. Softw. Eng., CSSE",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-79951542751
"Syed-Mohamad S.M., McBride T.","57189082262;8415398300;","A comparison of the reliability growth of open source and in-house software",2008,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC",,, 4724552,"229","236",,3,,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-67650558476&partnerID=40&md5=e99a91ab981996d222bca162b73fb531","Faculty of Engineering and Information Technology, University of Technology, Sydney, NSW, Australia","Syed-Mohamad, S.M., Faculty of Engineering and Information Technology, University of Technology, Sydney, NSW, Australia; McBride, T., Faculty of Engineering and Information Technology, University of Technology, Sydney, NSW, Australia","As commercial developers have established processes to assure software quality, open source software depends largely on community usage and defect reporting to achieve some level of quality. Thus, quality of open source software may vary. We examined defects reported in two active and popular open source software projects and an in-house project. The results of this analysis indicate that the reliability growth of each is quite distinct and that the defect profile of open source software appears to be a consequence of the open source software development method itself.","Defect profile; In-house software; Open source software; Orthogonal defect classification (ODC); Software reliability","In-house software; Open source software; Open source software development; Open source software projects; Open sources; Orthogonal defect classification (ODC); Reliability growth; Software Quality; Computer software selection and evaluation; Defects; Houses; Open systems; Quality assurance; Reliability analysis; Software engineering; Software reliability",,,,,,,,"Chillarege Ram, Bhandari Inderpal, S., Chaar Jarir, K., Halliday Michael, J., Moebus Diane, S., Ray Bonnie, K., Wong Man-Yuen, Orthogonal defect classification--A concept for in-process measurements (1992) IEEE Transactions on Software Engineering, 18 (11), pp. 943-956. , DOI 10.1109/32.177364; Chillarege, R., Biyani, S., Identifying risk using ODC based growth models (1994) Proceedings Software Reliability Engineering 5th International Symposium, pp. 282-288; Chillarege Ram, Kao Wei-Lun, Condit Richard, G., Defect type and its impact on the growth curve (1991) Proceedings - International Conference on Software Engineering, pp. 246-255. , 91 Int. Conf. on Software Eng; Chillarege, R., Ram Prasad, K., Test and development process retrospective - A case study using ODC triggers (2002) Dependable Systems and Networks on International Conference, pp. 669-678; Crowston, K., Annabi, H., Howison, J., Defining open source software project success (2003) Proceedings of the 24th International Conference on Information Systems (ICIS 2003), pp. 327-340; Crowston, K., Annabi, H., Howison, J., Masango, C., Effective work practices for software engineering: Free/libre open source software development (2004) Proceedings of the 2004 ACM workshop on Interdisciplinary software engineering research, pp. 18-26. , Newport Beach, CA, USA; El-Emam, K., Ethics and open source (2001) Empirical Software Engineering, 6 (4), pp. 291-292. , DOI 10.1023/A:1011962213685; Goel, A.L., Software reliability models: Assumptions, limitations, and applicability (1985) Software Engineering, IEEE Transactions on, SE-11 (12), pp. 1411-1423; Goel Amrit, L., Okumoto Kazu, TIME-DEPENDENT ERROR-DETECTION RATE MODEL FOR SOFTWARE RELIABILITY AND OTHER PERFORMANCE MEASURES. (1979) IEEE Transactions on Reliability, R-28 (3), pp. 206-211; Kanoun, K., Kaniche, M., Laprie, J.-C., Qualitative and quantitative reliability assessment (1997) IEEE Softw, 14 (2), pp. 77-87; Koru, A.G., Tian, J., Defect handling in medium and large open source projects (2004) Software, IEEE, 21 (4), pp. 54-61; Li, P.L., Herbsleb, J., Shaw, M., Finding predictors of field defects for open source software systems in commonly available data sources: A case study of OpenBSD (2005) Software Metrics, p. 10. , 11th IEEE International Symposium; Lyu, M.R., (1996) Handbook of Software Reliability Engineering, , Michael, R. L. (Ed), McGraw-Hill, Inc; McConnell, S., Open-source methodology: Ready for prime time? (1999) IEEE Software, 16 (4), pp. 6-11. , July/August; McLaughlin, L., Automated bug tracking: The promise and the pitfalls (2004) Software, IEEE, 21 (1), pp. 100-103; Musa, J.D., A theory of software reliability and its application (1975) IEEE transactions on software engineering, 1 (3), pp. 312-327; O'Reilly, T., Lessons from open-source software development (1999) Commun. ACM, 42 (4), pp. 32-37; (2007) ODC ODC-5.11 (2004), , http://www.research.ibm.com/softeng/ODC/ODC.HTM, IBM research, Available, accessed 14th Nov; Ohba Mitsuru, SOFTWARE RELIABILITY ANALYSIS MODELS. (1984) IBM Journal of Research and Development, 28 (4), pp. 428-443; Paulson, J.W., Succi, G., Eberlein, A., An empirical study of open-source and closed-source software products (2004) IEEE Trans. Softw. Eng, 30 (4), pp. 246-256; Raymond, E.S., (2000) The Cathedral and the Bazaar, , version 3.0; Scacchi, W., Understanding the requirements for developing open source software systems (2002) IEE Proceedings: Software, 149 (1), pp. 24-39. , DOI 10.1049/ip-sen:20020202; Sullivan, M., Chillarege, R., A comparison of software defects in database management systems and operating systems (1992) Fault-Tolerant Computing, pp. 475-484. , FTCS-22. Digest of Papers., Twenty-Second International Symposium on; Tamura, Y., Yamada, S., A method of useroriented reliability assessment for open source software and its applications (2006) Systems, Man and Cybernetics, pp. 2185-2190. , ICSMC '06. IEEE International Conference on; Vixie, P., (1999) Software Engineering In Open Sources: Voices from the Open Source Revolution O'Reilly & Associates; Wood, A., Predicting software reliability (1996) Computer, 29 (11), pp. 69-77; Yu, L., Chen, K., Evaluating the post-delivery fault reporting and correction process in closed-source and open-source software (2007) Software Quality, pp. 8-8. , WoSQ'07: ICSE Workshops 2007. Fifth International Workshop on","Syed-Mohamad, S. M.; Faculty of Engineering and Information Technology, , Sydney, NSW, Australia; email: sharifah@it.uts.edu.au",,"Institute of Software, Chinese Academy of Sciences, ISCAS;National Natural Science Foundation of China",,"15th Asia-Pacific Software Engineering Conference, APSEC 2008","2 December 2008 through 5 December 2008","Beijing",76425,15301362,9780769534466,,,"English","Proc. Asia Pac. Softw. Eng. Conf. APSEC",Conference Paper,"Final","",Scopus,2-s2.0-67650558476
"Syed-Mohamad S.M., McBride T.","57189082262;8415398300;","A comparison of the reliability growth of open source and in-House software",2008,"Neonatal, Paediatric and Child Health Nursing",,, 4724552,"229","236",,2,"10.1109/APSEC.2008.20","https://www.scopus.com/inward/record.uri?eid=2-s2.0-60849090213&doi=10.1109%2fAPSEC.2008.20&partnerID=40&md5=2af0dff60e4540b37e789ee07687bc05","Faculty of Engineering and Information Technology, University of Technology, Sydney, Australia","Syed-Mohamad, S.M., Faculty of Engineering and Information Technology, University of Technology, Sydney, Australia; McBride, T., Faculty of Engineering and Information Technology, University of Technology, Sydney, Australia","As commercial developers have established processes to assure software quality, open source software depends largely on community usage and defect reporting to achieve some level of quality. Thus, quality of open source software may vary. We examined defects reported in two active and popular open source software projects and an in-house project. The results of this analysis indicate that the reliability growth of each is quite distinct and that the defect profile of open source software appears to be a consequence of the open source software development method itself. © 2008 IEEE.","Defect profile; In-house software; Open source software; Orthogonal defect classification (ODC); Software reliability",,,,,,,,,"Chillarege, R., Bhandari, I.S., Chaar, J.K., Halliday, M.J., Moebus, D.S., Ray, B.K., Wong, M.Y., Orthogonal defect classification-a concept for in-process measurements (1992) Software Engineering, IEEE Transactions on, 18 (11), pp. 943-956; Chillarege, R., Biyani, S., Identifying risk using ODC based growth models (1994) Proceedings Software Reliability Engineering 5th International Symposium, pp. 282-288; Chillarege, R., Kao, W.-L., Condit, R.G., Defect type and its impact on the growth curve (1991) Proceedings of the 13th international conference on Software engineering Austin, pp. 246-255. , Texas, United States pp; Chillarege, R., Ram Prasad, K., Test and development process retrospective - a case study using ODC triggers (2002) Dependable Systems and Networks on International Conference, pp. 669-678; Crowston, K., Annabi, H., Howison, J., Defining open source software project success (2003) Proceedings of the 24th International Conference on Information Systems (ICIS 2003), pp. 327-340; Crowston, K., Annabi, H., Howison, J., Masango, C., Effective work practices for software engineering: Free/libre open source software development (2004) Proceedings of the 2004 ACM workshop on Interdisciplinary software engineering research Newport Beach, pp. 18-26. , CA, USA pp; El-Emam, K., Ethics and Open Source (2001) Empirical Softw. Engg, 6 (4), pp. 291-292; Goel, A. L. (1985), 'Software Reliability Models: Assumptions, Limitations, and Applicability', Software Engineering, IEEE Transactions on, SE-11, no no.12, pp. 1411-1423; Goel, A.L., Okumoto, K., A Time Dependent Error Detection Rate Model for Software Reliability and Other Performance Measures (1979) IEEE Transactions on Reliability, 28 (3), pp. 206-211; Kanoun, K., Kaniche, M., Laprie, J.-C., Qualitative and Quantitative Reliability Assessment (1997) IEEE Softw, 14 (2), pp. 77-87; Koru, A.G., Tian, J., Defect handling in medium and large open source projects (2004) Software, IEEE, 21 (4), pp. 54-61; Li, P. L., Herbsleb, J. and Shaw, M. (2005), 'Finding predictors of field defects for open source software systems in commonly available data sources: a case study of OpenBSD', Software Metrics, 2005. 11th IEEE International Symposium, pp. 10 pp; Lyu, M.R., (1996) Handbook of Software Reliability Engineering, , Michael, R. L, Ed, McGraw-Hill, Inc; McConnell, S., Open-source methodology: Ready for prime time? (1999) IEEE Software, 16 (4), pp. 6-11. , July/August; McLaughlin, L., Automated bug tracking: The promise and the pitfalls (2004) Software, IEEE, 21 (1), pp. 100-103; Musa, J.D., A theory of software reliability and its application (1975) IEEE transactions on software engineering, 1 (3), pp. 312-327; O'Reilly, T., Lessons from open-source software development (1999) Commun. ACM, 42 (4), pp. 32-37; ODC ODC-5.11 (2004), IBM research, Available: http://www.research. ibm.com/softeng/ODC/ODC.HTM, accessed 14th Nov 2007; Ohba, M., Software reliability analysis models (1984) IBM Journal of Research and Development, 28 (4), pp. 428-443; Paulson, J.W., Succi, G., Eberlein, A., An Empirical Study of Open-Source and Closed-Source Software Products (2004) IEEE Trans. Softw. Eng, 30 (4), pp. 246-256; Raymond, E. S, 2000 The Cathedral and the Bazaar, version 3.0; Scacchi, W., Understanding the requirements for developing open source software systems', Software (2002) IEE Proceedings, 149 (1), pp. 24-39; Sullivan, M., Chillarege, R., A comparison of software defects in database management systems and operating systems (1992) Fault-Tolerant Computing, 1992. FTCS-22. Digest of Papers., Twenty-Second International Symposium on, pp. 475-484; Tamura, Y., Yamada, S., A Method of User-oriented Reliability Assessment for Open Source Software and Its Applications (2006) Systems, Man and Cybernetics, 2006. ICSMC '06. IEEE International Conference on, pp. 2185-2190; Vixie, P., Software Engineering (1999) Open Sources: Voices from the Open Source Revolution, , O'Reilly & Associates; Wood, A., Predicting software reliability (1996) Computer, 29 (11), pp. 69-77; Yu, L., Chen, K., Evaluating the Post-Delivery Fault Reporting and Correction Process in Closed-Source and Open-Source Software (2007) Software Quality, 2007. WoSQ'07: ICSE Workshops 2007. Fifth International Workshop on, pp. 8-8","Syed-Mohamad, S. M.; Faculty of Engineering and Information Technology, , Sydney, Australia; email: sharifah@it.uts.edu.au",,"Institute of Software, Chinese Academy of Sciences, ISCAS",,"15th Asia-Pacific Software Engineering Conference, APSEC 2008","2 December 2008 through 5 December 2008","Beijing",75383,14416638,,,,"English","Neonatal Paediatr. Child Health Nurs.",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-60849090213
